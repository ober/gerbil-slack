---
basePath: /api
externalDocs:
  url: https://api.slack.com/web
  description: Learn more about the Slack Web API
host: slack.com
paths:
  /conversations.open:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: return_im
        type: boolean
        description: Boolean, indicates you want the full IM channel definition in
          the response.
        in: formData
      - name: users
        type: string
        description: Comma separated lists of users. If only one user is included,
          this creates a 1:1 DM.  The ordering of the users is preserved whenever
          a multi-person direct message is returned. Supply a `channel` when not supplying
          `users`.
        in: formData
      - name: channel
        type: string
        description: Resume a conversation by supplying an `im` or `mpim`'s ID. Or
          provide the `users` field instead.
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: conversations.open error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.open method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - method_not_supported_for_channel_type
                - user_not_found
                - user_not_visible
                - user_disabled
                - users_list_not_supplied
                - not_enough_users
                - too_many_users
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - channel_not_found
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              channel:
                id: D069C7QFK
              ok: true
          schema:
            title: conversations.open success schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response from conversations.open method
              when opening channels, ims, mpims
            properties:
              no_op:
                type: boolean
              channel:
                $ref: '#/definitions/objs_conversation'
              already_open:
                type: boolean
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_open
      description: Opens or resumes a direct message or multi-person direct message.
      externalDocs:
        url: https://api.slack.com/methods/conversations.open
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /migration.exchange:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `tokens.basic`'
        in: query
      - name: to_old
        type: boolean
        description: Specify `true` to convert `W` global user IDs to workspace-specific
          `U` IDs. Defaults to `false`.
        in: query
      - name: users
        type: string
        description: A comma-separated list of user ids, up to 400 per request
        in: query
      tags:
      - migration
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: not_enterprise_team
          schema:
            title: migration.exchange error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from migration.exchange method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - not_enterprise_team
                - too_many_users
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response when there are no mappings to provide
        200:
          examples:
            application/json:
              invalid_user_ids:
              - U21ABZZXX
              team_id: T1KR7PE1W
              ok: true
              enterprise_id: E1KQTNXE1
              user_id_map:
                U06UBSVDX: W06PUUDMW
                U06UBSVB3: W06PUUDLY
                W06UAZ65Q: W06UAZ65Q
                U06UBSUN5: W06M56XJM
                U06UEB62U: W06PTT6GH
          schema:
            title: migration.exchange success schema
            type: object
            required:
            - ok
            - team_id
            - enterprise_id
            additionalProperties: true
            description: Schema for successful response from migration.exchange method
            properties:
              invalid_user_ids:
                title: A list of User IDs that cannot be mapped or found
                type: array
                items:
                  type: string
              team_id:
                $ref: '#/definitions/defs_team'
              ok:
                $ref: '#/definitions/defs_ok_true'
              enterprise_id:
                title: The enterprise grid organization ID containing the workspace/team.
                type: string
              user_id_map:
                title: A mapping of provided user IDs with mapped user IDs
                additionalProperties: true
                type: object
          description: Typical success response when mappings exist for the specified
            user IDs
      security:
      - slackAuth:
        - tokens.basic
      produces:
      - application/json
      operationId: migration_exchange
      description: For Enterprise Grid workspaces, map local user IDs to global user
        IDs
      externalDocs:
        url: https://api.slack.com/methods/migration.exchange
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /usergroups.users.list:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `usergroups:read`'
        in: query
      - name: include_disabled
        type: boolean
        description: Allow results that involve disabled User Groups.
        in: query
      - name: usergroup
        type: string
        description: The encoded ID of the User Group to update.
        in: query
      tags:
      - usergroups.users
      - usergroups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Standard failure response when used with an invalid token
        200:
          examples:
            application/json:
              users:
              - U060R4BJ4
              - W123A4BC5
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Standard success response when used with a user token
      security:
      - slackAuth:
        - usergroups:read
      produces:
      - application/json
      operationId: usergroups_users_list
      description: List all users in a User Group
      externalDocs:
        url: https://api.slack.com/methods/usergroups.users.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /auth.test:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `none`'
        in: header
      tags:
      - auth
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: auth.test error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response auth.test method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - not_authed
                - invalid_auth
                - token_revoked
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Standard failure response when used with an invalid token
        200:
          examples:
            application/json:
              user_id: W12345678
              user: grace
              url: https://subarachnoid.slack.com/
              team_id: T12345678
              ok: true
              team: Subarachnoid Workspace
          schema:
            title: auth.test success schema
            type: object
            required:
            - ok
            - url
            - team
            - user
            - team_id
            - user_id
            additionalProperties: true
            description: Schema for successful response auth.test method
            properties:
              user_id:
                $ref: '#/definitions/defs_user_id'
              user:
                type: string
              url:
                type: string
              team_id:
                $ref: '#/definitions/defs_team'
              ok:
                $ref: '#/definitions/defs_ok_true'
              team:
                type: string
          description: Standard success response when used with a user token
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: auth_test
      description: Checks authentication & identity.
      externalDocs:
        url: https://api.slack.com/methods/auth.test
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /groups.invite:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: user
        type: string
        description: User to invite.
        in: formData
      - name: channel
        type: string
        description: Private channel to invite user to.
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: groups.invite error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response groups.invite method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - user_not_found
                - cant_invite_self
                - is_archived
                - cant_invite
                - ura_max_channels
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: groups.invite success schema
            type: object
            required:
            - ok
            - group
            additionalProperties: true
            description: Schema for successful response groups.invite method
            properties:
              group:
                $ref: '#/definitions/objs_group'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_invite
      description: Invites a user to a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.invite
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /api.test:
    get:
      parameters:
      - name: foo
        type: string
        description: example property to return
        in: query
      - name: error
        type: string
        description: Error response to return
        in: query
      tags:
      - api
      responses:
        default:
          examples:
            application/json:
              ok: false
              args:
                error: my_error
              error: my_error
          schema:
            title: api.test error schema
            type: object
            required:
            - ok
            - error
            additionalProperties:
              type: object
            description: Schema for error response api.test method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                type: string
          description: Artificial error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: api.test success schema
            type: object
            required:
            - ok
            additionalProperties:
              type: object
            description: Schema for successful response api.test method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Standard success response
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: api_test
      description: Checks API calling code.
      externalDocs:
        url: https://api.slack.com/methods/api.test
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /channels.create:
    post:
      parameters:
      - name: validate
        type: boolean
        description: Whether to return errors on invalid channel name instead of modifying
          it to meet the specified criteria.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: name
        type: string
        description: Name of channel to create
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              detail: Value passed for `name` contained unallowed special characters.
              ok: false
              error: invalid_name_specials
          schema:
            title: channels.create error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response channels.create method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - name_taken
                - restricted_action
                - no_channel
                - invalid_name_required
                - invalid_name_punctuation
                - invalid_name_maxlength
                - invalid_name_specials
                - invalid_name
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_restricted
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - team_added_to_org
                - missing_charset
                - superfluous_charset
                type: string
          description: Example error response when an invalid name is provided
        200:
          examples:
            application/json:
              channel:
                last_read: 0000000000.000000
                is_archived: false
                latest: null
                is_member: true
                name: endeavor
                is_private: false
                members:
                - U061F7AUR
                is_org_shared: false
                unread_count_display: 0
                is_shared: false
                previous_names: []
                is_general: false
                creator: U061F7AUR
                topic:
                  creator: 
                  value: 
                  last_set: 0
                created: 1502833204
                id: C0DEL09A5
                name_normalized: endeavor
                is_channel: true
                is_mpim: false
                purpose:
                  creator: 
                  value: 
                  last_set: 0
                unread_count: 0
              ok: true
          schema:
            title: channels.create error schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response channels.create method
            properties:
              channel:
                $ref: '#/definitions/objs_channel'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response resulting in a new channel
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_create
      description: Creates a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.create
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /channels.join:
    post:
      parameters:
      - name: validate
        type: boolean
        description: Whether to return errors on invalid channel name instead of modifying
          it to meet the specified criteria.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: name
        type: string
        description: Name of channel to join
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: channels.join error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from channels.join method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - name_taken
                - restricted_action
                - no_channel
                - is_archived
                - invalid_name_required
                - invalid_name_punctuation
                - invalid_name_maxlength
                - invalid_name_specials
                - invalid_name
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - user_is_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              already_in_channel: true
              channel:
                is_archived: false
                members:
                - U0G9QF9C6
                - U1QNSQB9U
                is_member: true
                name: busting
                is_private: false
                is_org_shared: false
                is_shared: false
                previous_names: []
                is_general: false
                creator: U0G9QF9C6
                topic:
                  creator: U0G9QF9C6
                  value: My Topic
                  last_set: 1503435128
                id: C1H9RESGL
                created: 1466025154
                name_normalized: busting
                is_channel: true
                is_mpim: false
                purpose:
                  creator: U0G9QF9C6
                  value: My Purpose
                  last_set: 1503435128
              ok: true
          schema:
            title: channels.join schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response from channels.join method
            properties:
              already_in_channel:
                type: boolean
              channel:
                $ref: '#/definitions/objs_channel'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_join
      description: Joins a channel, creating it if needed.
      externalDocs:
        url: https://api.slack.com/methods/channels.join
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /usergroups.users.update:
    post:
      parameters:
      - name: include_count
        type: boolean
        description: Include the number of users in the User Group.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `usergroups:write`'
        in: header
      - name: users
        type: string
        description: A comma separated string of encoded user IDs that represent the
          entire list of users for the User Group.
        in: formData
      - name: usergroup
        type: string
        description: The encoded ID of the User Group to update.
        in: formData
      tags:
      - usergroups.users
      - usergroups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              usergroup:
                handle: marketing-team
                name: Marketing Team
                deleted_by: null
                user_count: 1
                updated_by: U060R4BJ4
                date_create: 1447096577
                users:
                - U060R4BJ4
                - U060RNRCZ
                date_update: 1447102109
                team_id: T060R4BHN
                is_usergroup: true
                auto_type: null
                description: Marketing gurus, PR experts and product advocates.
                is_external: false
                id: S0616NG6M
                created_by: U060R4BJ4
                date_delete: 0
                prefs:
                  groups: []
                  channels: []
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - usergroups:write
      produces:
      - application/json
      operationId: usergroups_users_update
      description: Update the list of users for a User Group
      externalDocs:
        url: https://api.slack.com/methods/usergroups.users.update
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /groups.archive:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: channel
        type: string
        description: Private channel to archive
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: groups.archive error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from groups.archive method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - already_archived
                - group_contains_others
                - restricted_action
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: groups.archive schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from groups.archive method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_archive
      description: Archives a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.archive
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /channels.leave:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: channel
        type: string
        description: Channel to leave
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_leave
      description: Leaves a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.leave
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /mpim.mark:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `mpim:write`'
        in: header
      - name: ts
        type: number
        description: Timestamp of the most recently seen message.
        in: formData
      - name: channel
        type: string
        description: multiparty direct message channel to set reading cursor in.
        in: formData
      tags:
      - mpim
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: mpim.mark error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from mpim.mark method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - invalid_timestamp
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: mpim.mark schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from mpim.mark method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - mpim:write
      produces:
      - application/json
      operationId: mpim_mark
      description: Sets the read cursor in a multiparty direct message channel.
      externalDocs:
        url: https://api.slack.com/methods/mpim.mark
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /reminders.info:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `reminders:read`'
        in: query
      - name: reminder
        type: string
        description: The ID of the reminder
        in: query
      tags:
      - reminders
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - reminders:read
      produces:
      - application/json
      operationId: reminders_info
      description: Gets information about a reminder.
      externalDocs:
        url: https://api.slack.com/methods/reminders.info
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /files.list:
    get:
      parameters:
      - name: count
        type: string
        in: query
      - name: channel
        type: string
        description: Filter files appearing in a specific channel, indicated by its
          ID.
        in: query
      - name: ts_to
        type: number
        description: Filter files created before this timestamp (inclusive).
        in: query
      - name: ts_from
        type: number
        description: Filter files created after this timestamp (inclusive).
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `files:read`'
        in: query
      - name: user
        type: string
        description: Filter files created by a single user.
        in: query
      - name: page
        type: string
        in: query
      - name: types
        type: string
        description: 'Filter files by type:


          * `all` - All files

          * `spaces` - Posts

          * `snippets` - Snippets

          * `images` - Image files

          * `gdocs` - Google docs

          * `zips` - Zip files

          * `pdfs` - PDF files


          You can pass multiple values in the types argument, like `types=spaces,snippets`.The
          default value is `all`, which does not filter the list.'
        in: query
      tags:
      - files
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: files.list error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from files.list method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - user_not_found
                - unknown_type
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - user_is_bot
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: files.list schema
            type: object
            required:
            - ok
            - files
            - paging
            additionalProperties: true
            description: Schema for successful response from files.list method
            properties:
              files:
                type: array
                uniqueItems: true
                minItems: 0
                items:
                  $ref: '#/definitions/objs_file'
              paging:
                $ref: '#/definitions/objs_paging'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - files:read
      produces:
      - application/json
      operationId: files_list
      description: Lists & filters team files.
      externalDocs:
        url: https://api.slack.com/methods/files.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /dnd.setSnooze:
    post:
      parameters:
      - name: num_minutes
        type: integer
        description: Number of minutes, from now, to snooze until.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `dnd:write`'
        in: formData
      tags:
      - dnd
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - dnd:write
      produces:
      - application/json
      operationId: dnd_setSnooze
      description: Turns on Do Not Disturb mode for the current user, or changes its
        duration.
      externalDocs:
        url: https://api.slack.com/methods/dnd.setSnooze
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /chat.update:
    post:
      parameters:
      - name: attachments
        type: string
        description: A JSON-based array of structured attachments, presented as a
          URL-encoded string. This field is required when not presenting `text`.
        in: formData
      - name: text
        type: string
        description: New text for the message, using the [default formatting rules](/docs/formatting).
          It's not required when presenting `attachments`.
        in: formData
      - name: ts
        type: number
        description: Timestamp of the message to be updated.
        in: formData
      - name: parse
        type: string
        description: Change how messages are treated. Defaults to `client`, unlike
          `chat.postMessage`. See [below](#formatting).
        in: formData
      - name: as_user
        type: boolean
        description: Pass true to update the message as the authed user. [Bot users](/bot-users)
          in this context are considered authed users.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `chat:write`'
        in: header
      - name: link_names
        type: boolean
        description: Find and link channel names and usernames. Defaults to `none`.
          See [below](#formatting).
        in: formData
      - name: channel
        type: string
        description: Channel containing the message to be updated.
        in: formData
      tags:
      - chat
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: cant_update_message
          schema:
            title: chat.update error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response chat.update method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - message_not_found
                - cant_update_message
                - channel_not_found
                - edit_window_closed
                - msg_too_long
                - too_many_attachments
                - rate_limited
                - no_text
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - request_timeout
                - invalid_json
                - json_not_object
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ts: 1401383885.000061
              channel: C024BE91L
              text: Updated text you carefully authored
              ok: true
          schema:
            title: chat.update success schema
            type: object
            required:
            - ok
            - channel
            - ts
            - text
            additionalProperties: true
            description: Schema for successful response of chat.update method
            properties:
              ts:
                $ref: '#/definitions/defs_ts'
              channel:
                $ref: '#/definitions/defs_channel'
              text:
                title: Updated message text
                type: string
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      produces:
      - application/json
      operationId: chat_update
      description: Updates a message.
      externalDocs:
        url: https://api.slack.com/methods/chat.update
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.kick:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: user
        type: string
        description: User ID to be removed.
        in: formData
      - name: channel
        type: string
        description: ID of conversation to remove user from.
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: cant_kick_self
          schema:
            title: conversations.kick error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response conversations.kick method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - method_not_supported_for_channel_type
                - missing_scope
                - channel_not_found
                - user_not_found
                - cant_kick_self
                - not_in_channel
                - cant_kick_from_general
                - restricted_action
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response when you attempt to kick yourself from
            a channel
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: conversations.kick success schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response conversations.kick method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_kick
      description: Removes a user from a conversation.
      externalDocs:
        url: https://api.slack.com/methods/conversations.kick
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /usergroups.list:
    get:
      parameters:
      - name: include_users
        type: boolean
        description: Include the list of users for each User Group.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `usergroups:read`'
        in: query
      - name: include_count
        type: boolean
        description: Include the number of users in each User Group.
        in: query
      - name: include_disabled
        type: boolean
        description: Include disabled User Groups.
        in: query
      tags:
      - usergroups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
              usergroups:
              - handle: admins
                name: Team Admins
                deleted_by: null
                user_count: 2
                updated_by: U060RNRCZ
                date_create: 1446598059
                date_update: 1446670362
                team_id: T060RNRCH
                is_usergroup: true
                auto_type: admin
                description: A group of all Administrators on your team.
                is_external: false
                id: S0614TZR7
                created_by: USLACKBOT
                date_delete: 0
                prefs:
                  groups: []
                  channels: []
              - handle: owners
                name: Team Owners
                deleted_by: null
                user_count: 1
                updated_by: USLACKBOT
                date_create: 1446678371
                date_update: 1446678371
                team_id: T060RNRCH
                is_usergroup: true
                auto_type: owner
                description: A group of all Owners on your team.
                is_external: false
                id: S06158AV7
                created_by: USLACKBOT
                date_delete: 0
                prefs:
                  groups: []
                  channels: []
              - handle: marketing-team
                name: Marketing Team
                deleted_by: null
                user_count: 0
                updated_by: U060RNRCZ
                date_create: 1446746793
                date_update: 1446747767
                team_id: T060RNRCH
                is_usergroup: true
                auto_type: null
                description: Marketing gurus, PR experts and product advocates.
                is_external: false
                id: S0615G0KT
                created_by: U060RNRCZ
                date_delete: 1446748865
                prefs:
                  groups: []
                  channels: []
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - usergroups:read
      produces:
      - application/json
      operationId: usergroups_list
      description: List all User Groups for a team
      externalDocs:
        url: https://api.slack.com/methods/usergroups.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /reactions.get:
    get:
      parameters:
      - name: full
        type: boolean
        description: If true always return the complete reaction list.
        in: query
      - name: file_comment
        type: string
        description: File comment to get reactions for.
        in: query
      - name: timestamp
        type: number
        description: Timestamp of the message to get reactions for.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `reactions:read`'
        in: query
      - name: file
        type: string
        description: File to get reactions for.
        in: query
      - name: channel
        type: string
        description: Channel where the message to get reactions for was posted.
        in: query
      tags:
      - reactions
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: reactions.get error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from reactions.get method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - bad_timestamp
                - file_not_found
                - file_comment_not_found
                - message_not_found
                - no_item_specified
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              file:
                title: computer.gif
                ims: []
                name: computer.gif
                user: U2U85N1RV
                comments_count: 1
                timestamp: 1507850315
                reactions:
                - name: stuck_out_tongue_winking_eye
                  users:
                  - U2U85N1RV
                  count: 1
                id: F7H0D7ZA4
                groups: []
                created: 1507850315
                channels:
                - C2U7V2YA2
              type: file
              ok: true
          schema:
            title: reactions.get success schema
            type: object
            description: Schema for successful response from reactions.get method
            items:
            - required:
              - ok
              - type
              - channel
              - message
              additionalProperties: true
              properties:
                type:
                  enum:
                  - message
                  type: string
                channel:
                  $ref: '#/definitions/defs_channel'
                ok:
                  $ref: '#/definitions/defs_ok_true'
                message:
                  $ref: '#/definitions/objs_message'
            - required:
              - ok
              - type
              - file
              additionalProperties: true
              properties:
                file:
                  $ref: '#/definitions/objs_file'
                type:
                  enum:
                  - file
                  type: string
                ok:
                  $ref: '#/definitions/defs_ok_true'
            - required:
              - ok
              - type
              - file
              - comment
              additionalProperties: true
              properties:
                file:
                  $ref: '#/definitions/objs_file'
                type:
                  enum:
                  - file_comment
                  type: string
                ok:
                  $ref: '#/definitions/defs_ok_true'
                comment:
                  $ref: '#/definitions/objs_comment'
          description: Typical success response
      security:
      - slackAuth:
        - reactions:read
      produces:
      - application/json
      operationId: reactions_get
      description: Gets reactions for an item.
      externalDocs:
        url: https://api.slack.com/methods/reactions.get
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /pins.add:
    post:
      parameters:
      - name: file_comment
        type: string
        description: File comment to pin.
        in: formData
      - name: timestamp
        type: number
        description: Timestamp of the message to pin.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `pins:write`'
        in: header
      - name: file
        type: string
        description: File to pin.
        in: formData
      - name: channel
        type: string
        description: Channel to pin the item in.
        in: formData
      tags:
      - pins
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: pins.add error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from pins.add method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - bad_timestamp
                - file_not_found
                - file_comment_not_found
                - message_not_found
                - channel_not_found
                - no_item_specified
                - already_pinned
                - permission_denied
                - file_not_shared
                - not_pinnable
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: pins.add schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from pins.add method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - pins:write
      produces:
      - application/json
      operationId: pins_add
      description: Pins an item to a channel.
      externalDocs:
        url: https://api.slack.com/methods/pins.add
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /mpim.replies:
    get:
      parameters:
      - name: thread_ts
        type: number
        description: Unique identifier of a thread's parent message.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `mpim:history`'
        in: query
      - name: channel
        type: string
        description: Multiparty direct message channel to fetch thread from.
        in: query
      tags:
      - mpim
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              messages:
              - user: U2147483896
                type: message
                ts: 1358546515.000008
                text: Hello
              - user: U2147483896
                type: message
                ts: 1358546515.000007
                text: World
                is_starred: true
              - type: something_else
                ts: 1358546515.000007
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - mpim:history
      produces:
      - application/json
      operationId: mpim_replies
      description: Retrieve a thread of messages posted to a direct message conversation
        from a multiparty direct message.
      externalDocs:
        url: https://api.slack.com/methods/mpim.replies
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /channels.info:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:read`'
        in: query
      - name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for this channel. Defaults
          to `false`
        in: query
      - name: channel
        type: string
        description: Channel to get info on
        in: query
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: channels.info error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response channels.info method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - team_added_to_org
                - missing_charset
                - superfluous_charset
                type: string
          description: Error response when the specified channel cannot be found
        200:
          examples:
            application/json:
              channel:
                last_read: 1503435939.000101
                is_archived: false
                latest:
                  type: message
                  ts: 1503435956.000247
                  text: Containment unit is 98% full
                  subtype: bot_message
                  attachments:
                  - text: Don't get too attached
                    fallback: This is an attachment fallback
                    id: 1
                  username: ecto1138
                  bot_id: B19LU7CSY
                is_member: true
                name: busting
                is_private: false
                members:
                - U0G9QF9C6
                - U1QNSQB9U
                is_org_shared: false
                unread_count_display: 1
                is_shared: false
                previous_names:
                - dusting
                is_general: false
                creator: U0G9QF9C6
                topic:
                  creator: U0G9QF9C6
                  value: Spiritual containment strategies
                  last_set: 1503435128
                created: 1466025154
                id: C1H9RESGL
                name_normalized: busting
                is_channel: true
                is_mpim: false
                purpose:
                  creator: U0G9QF9C6
                  value: Discuss busting ghosts
                  last_set: 1503435128
                unread_count: 1
              ok: true
          schema:
            title: channels.info success schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response channels.info method
            properties:
              channel:
                $ref: '#/definitions/objs_channel'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:read
      produces:
      - application/json
      operationId: channels_info
      description: Gets information about a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.info
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /im.close:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `im:write`'
        in: header
      - name: channel
        type: string
        description: Direct message channel to close.
        in: formData
      tags:
      - im
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - im:write
      produces:
      - application/json
      operationId: im_close
      description: Close a direct message channel.
      externalDocs:
        url: https://api.slack.com/methods/im.close
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /files.sharedPublicURL:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `files:write:user`'
        in: header
      - name: file
        type: string
        description: File to share
        in: formData
      tags:
      - files
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - files:write:user
      produces:
      - application/json
      operationId: files_sharedPublicURL
      description: Enables a file for public/external sharing.
      externalDocs:
        url: https://api.slack.com/methods/files.sharedPublicURL
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /files.revokePublicURL:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `files:write:user`'
        in: header
      - name: file
        type: string
        description: File to revoke
        in: formData
      tags:
      - files
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - files:write:user
      produces:
      - application/json
      operationId: files_revokePublicURL
      description: Revokes public/external sharing access for a file
      externalDocs:
        url: https://api.slack.com/methods/files.revokePublicURL
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /search.messages:
    get:
      parameters:
      - name: sort_dir
        type: string
        description: Change sort direction to ascending (`asc`) or descending (`desc`).
        in: query
      - name: query
        type: string
        description: Search query.
        in: query
      - name: sort
        type: string
        description: Return matches sorted by either `score` or `timestamp`.
        in: query
      - name: count
        type: string
        description: Pass the number of results you want per "page". Maximum of `100`.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `search:read`'
        in: query
      - name: highlight
        type: boolean
        description: Pass a value of `true` to enable query highlight markers (see
          below).
        in: query
      - name: page
        type: string
        in: query
      tags:
      - search
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: No query passed
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              messages:
                total: 2
                pagination:
                  total_count: 2
                  page: 1
                  per_page: 20
                  last: 2
                  page_count: 1
                  first: 1
                matches:
                - iid: cb64bdaa-c1e8-4631-8a91-0f78080113e9
                  permalink: https://hitchhikers.slack.com/archives/C12345678/p1508284197000015
                  user: U2U85N1RV
                  type: message
                  channel:
                    name: general
                    is_private: false
                    is_pending_ext_shared: false
                    is_org_shared: false
                    is_shared: false
                    is_ext_shared: false
                    id: C12345678
                    is_mpim: false
                    pending_shared: []
                  ts: 1508284197.000015
                  text: The meaning of life the universe and everything is 42.
                  username: roach
                  team: T12345678
                - iid: 9a00d3c9-bd2d-45b0-988b-6cff99ae2a90
                  permalink: https://hitchhikers.slack.com/archives/C12345678/p1508795665000236
                  user: 
                  type: message
                  channel:
                    name: random
                    is_private: false
                    is_pending_ext_shared: false
                    is_org_shared: false
                    is_shared: false
                    is_ext_shared: false
                    id: C12345678
                    is_mpim: false
                    pending_shared: []
                  ts: 1508795665.000236
                  text: The meaning of life the universe and everything is 101010
                  username: robot overlord
                  team: T12345678
                paging:
                  total: 2
                  page: 1
                  count: 20
                  pages: 1
              ok: true
              query: The meaning of life the universe and everything
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - search:read
      produces:
      - application/json
      operationId: search_messages
      description: Searches for messages matching a query.
      externalDocs:
        url: https://api.slack.com/methods/search.messages
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /apps.permissions.info:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `none`'
        in: query
      tags:
      - apps.permissions
      - apps
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Standard failure response when used with an invalid token
        200:
          examples:
            application/json:
              info:
                app_home:
                  scopes:
                  - chat:write
                  - im:history
                  - im:read
                  resources:
                    ids:
                    - D0C0NU1Q8
                    - D0BH95DLH
                group:
                  scopes: []
                  resources:
                    ids: []
                im:
                  scopes: []
                  resources:
                    ids: []
                mpim:
                  scopes: []
                  resources:
                    ids: []
                channel:
                  scopes:
                  - channels:read
                  resources:
                    wildcard: false
                    excluded_ids: []
                    ids:
                    - C061FA5PB
                team:
                  scopes: []
                  resources:
                    ids: []
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Standard success response when used with a user token
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: apps_permissions_info
      description: Returns list of permissions this app has on a team.
      externalDocs:
        url: https://api.slack.com/methods/apps.permissions.info
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /users.setActive:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users:write`'
        in: header
      tags:
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - users:write
      produces:
      - application/json
      operationId: users_setActive
      description: Marked a user as active. Deprecated and non-functional.
      externalDocs:
        url: https://api.slack.com/methods/users.setActive
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /mpim.close:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `mpim:write`'
        in: header
      - name: channel
        type: string
        description: MPIM to close.
        in: formData
      tags:
      - mpim
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - mpim:write
      produces:
      - application/json
      operationId: mpim_close
      description: Closes a multiparty direct message channel.
      externalDocs:
        url: https://api.slack.com/methods/mpim.close
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.history:
    get:
      parameters:
      - name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results only
          when either timestamp is specified.
        in: query
      - name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:history`'
        in: query
      - name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        in: query
      - name: oldest
        type: number
        description: Start of time range of messages to include in results.
        in: query
      - name: channel
        type: string
        description: Conversation ID to fetch history for.
        in: query
      - name: latest
        type: number
        description: End of time range of messages to include in results.
        in: query
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: conversations.history error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.history method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - missing_scope
                - channel_not_found
                - invalid_ts_latest
                - invalid_ts_oldest
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              messages:
              - user: U012AB3CDE
                type: message
                ts: 1512085950.000216
                text: I find you punny and would like to smell your nose letter
              - user: U061F7AUR
                type: message
                ts: 1512104434.000490
                text: What, you want to smell my shoes better?
              pin_count: 0
              ok: true
              response_metadata:
                next_cursor: bmV4dF90czoxNTEyMDg1ODYxMDAwNTQz
              has_more: true
          schema:
            title: conversations.history success schema
            type: object
            required:
            - ok
            - messages
            - has_more
            - pin_count
            additionalProperties: true
            description: Schema for successful response from conversations.history
              method
            properties:
              messages:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/objs_message'
              pin_count:
                type: integer
              ok:
                $ref: '#/definitions/defs_ok_true'
              has_more:
                type: boolean
          description: Typical success response containing a channel's messages
      security:
      - slackAuth:
        - channels:history
        - groups:history
        - im:history
        - mpim:history
      produces:
      - application/json
      operationId: conversations_history
      description: Fetches a conversation's history of messages and events.
      externalDocs:
        url: https://api.slack.com/methods/conversations.history
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /conversations.create:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: name
        type: string
        description: Name of the public or private channel to create
        in: formData
      - name: is_private
        type: boolean
        description: Create a private channel instead of a public one
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: name_taken
          schema:
            title: conversations.create error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.create method
            properties:
              detail:
                type: string
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - method_not_supported_for_channel_type
                - missing_scope
                - name_taken
                - restricted_action
                - no_channel
                - invalid_name_required
                - invalid_name_punctuation
                - invalid_name_maxlength
                - invalid_name_specials
                - invalid_name
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response when name already in use
        200:
          examples:
            application/json:
              channel:
                is_archived: false
                last_read: 0000000000.000000
                latest: null
                priority: 0
                name: endeavor
                is_member: true
                is_private: false
                unread_count: 0
                is_pending_ext_shared: false
                is_group: false
                is_org_shared: false
                is_im: false
                unread_count_display: 0
                is_shared: false
                previous_names: []
                is_general: false
                is_ext_shared: false
                creator: U0123456
                unlinked: 0
                topic:
                  creator: 
                  value: 
                  last_set: 0
                created: 1504554479
                id: C0EAQDV4Z
                name_normalized: endeavor
                is_channel: true
                is_mpim: false
                purpose:
                  creator: 
                  value: 
                  last_set: 0
                pending_shared: []
              ok: true
          schema:
            title: conversations.create success schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response conversations.create method
            properties:
              channel:
                $ref: '#/definitions/objs_conversation'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: If successful, the command returns a rather stark [conversation
            object](/types/conversation)
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_create
      description: Initiates a public or private channel-based conversation
      externalDocs:
        url: https://api.slack.com/methods/conversations.create
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /groups.leave:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: channel
        type: string
        description: Private channel to leave
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_leave
      description: Leaves a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.leave
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /chat.delete:
    post:
      parameters:
      - name: as_user
        type: boolean
        description: Pass true to delete the message as the authed user with `chat:write:user`
          scope. [Bot users](/bot-users) in this context are considered authed users.
          If unused or false, the message will be deleted with `chat:write:bot` scope.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `chat:write`'
        in: header
      - name: ts
        type: number
        description: Timestamp of the message to be deleted.
        in: formData
      - name: channel
        type: string
        description: Channel containing the message to be deleted.
        in: formData
      tags:
      - chat
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: message_not_found
          schema:
            title: chat.delete error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from chat.delete method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - message_not_found
                - channel_not_found
                - cant_delete_message
                - compliance_exports_prevent_deletion
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ts: 1401383885.000061
              channel: C024BE91L
              ok: true
          schema:
            title: chat.delete success schema
            type: object
            required:
            - ok
            - channel
            - ts
            additionalProperties: true
            description: Schema for successful response of chat.delete method
            properties:
              ts:
                $ref: '#/definitions/defs_ts'
              channel:
                $ref: '#/definitions/defs_channel'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      produces:
      - application/json
      operationId: chat_delete
      description: Deletes a message.
      externalDocs:
        url: https://api.slack.com/methods/chat.delete
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /groups.setTopic:
    post:
      parameters:
      - name: topic
        type: string
        description: The new topic
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: channel
        type: string
        description: Private channel to set the topic of
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: groups.setTopic error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from groups.setTopic method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - is_archived
                - too_long
                - user_is_restricted
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: groups.setTopic schema
            type: object
            required:
            - ok
            - topic
            additionalProperties: true
            description: Schema for successful response from groups.setTopic method
            properties:
              topic:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_setTopic
      description: Sets the topic for a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.setTopic
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.leave:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: channel
        type: string
        description: Conversation to leave
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: cant_leave_general
          schema:
            title: conversations.leave error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.leave method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - method_not_supported_for_channel_type
                - last_member
                - missing_scope
                - channel_not_found
                - is_archived
                - cant_leave_general
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_restricted
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - team_added_to_org
                - missing_charset
                - superfluous_charset
                type: string
          description: Typical error response when attempting to leave a workspace's
            "general" channel
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: conversations.leave success schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from conversations.leave method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
              not_in_channel:
                enum:
                - true
                type: boolean
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_leave
      description: Leaves a conversation.
      externalDocs:
        url: https://api.slack.com/methods/conversations.leave
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /users.conversations:
    get:
      parameters:
      - name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:read`'
        in: query
      - name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached. Must be an integer no larger than 1000.
        in: query
      - name: user
        type: string
        description: Browse conversations by a specific user ID's membership. Non-public
          channels are restricted to those where the calling user shares membership.
        in: query
      - name: exclude_archived
        type: boolean
        description: Set to `true` to exclude archived channels from the list
        in: query
      - name: types
        type: string
        description: Mix and match channel types by providing a comma-separated list
          of any combination of `public_channel`, `private_channel`, `mpim`, `im`
        in: query
      tags:
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: users.conversations error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from users.conversations method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - method_not_supported_for_channel_type
                - missing_scope
                - invalid_types
                - invalid_cursor
                - invalid_limit
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              response_metadata:
                next_cursor: dGVhbTpDMDYxRkE1UEI=
              ok: true
              channels:
              - is_archived: false
                name: general
                is_private: false
                is_pending_ext_shared: false
                is_org_shared: false
                is_group: false
                is_im: false
                is_shared: false
                previous_names: []
                is_general: true
                is_ext_shared: false
                creator: U012A3CDE
                unlinked: 0
                topic:
                  creator: 
                  value: Company-wide announcements and work-based matters
                  last_set: 0
                created: 1449252889
                id: C012AB3CD
                name_normalized: general
                is_channel: true
                is_mpim: false
                purpose:
                  creator: 
                  value: This channel is for team-wide communication and announcements.
                    All team members are in this channel.
                  last_set: 0
                pending_shared: []
              - is_archived: false
                name: random
                is_private: false
                is_pending_ext_shared: false
                is_org_shared: false
                is_group: false
                is_im: false
                is_shared: false
                previous_names: []
                is_general: false
                is_ext_shared: false
                creator: U061F7AUR
                unlinked: 0
                topic:
                  creator: 
                  value: Non-work banter and water cooler conversation
                  last_set: 0
                created: 1449252889
                id: C061EG9T2
                name_normalized: random
                is_channel: true
                is_mpim: false
                purpose:
                  creator: 
                  value: A place for non-work-related flimflam, faffing, hodge-podge
                    or jibber-jabber you'd prefer to keep out of more focused work-related
                    channels.
                  last_set: 0
                pending_shared: []
          schema:
            title: users.conversations success schema
            type: object
            required:
            - ok
            - channels
            additionalProperties: true
            description: Schema for successful response from users.conversations method.
              Returned conversation objects do not include `num_members` or `is_member`
            properties:
              response_metadata:
                required:
                - next_cursor
                additionalProperties: true
                type: object
                properties:
                  next_cursor:
                    type: string
              ok:
                $ref: '#/definitions/defs_ok_true'
              channels:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/definitions/objs_conversation'
          description: Typical success response with only public channels. Note how
            `num_members` and `is_member` are not returned like typical `conversations`
            objects.
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
      produces:
      - application/json
      operationId: users_conversations
      description: List conversations the calling user may access.
      externalDocs:
        url: https://api.slack.com/methods/users.conversations
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /team.accessLogs:
    get:
      parameters:
      - name: count
        type: string
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `admin`'
        in: query
      - name: page
        type: string
        in: query
      - name: before
        type: integer
        description: End of time range of logs to include in results (inclusive).
        in: query
      tags:
      - team
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - admin
      produces:
      - application/json
      operationId: team_accessLogs
      description: Gets the access logs for the current team.
      externalDocs:
        url: https://api.slack.com/methods/team.accessLogs
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /channels.rename:
    post:
      parameters:
      - name: validate
        type: boolean
        description: Whether to return errors on invalid channel name instead of modifying
          it to meet the specified criteria.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: name
        type: string
        description: New name for channel.
        in: formData
      - name: channel
        type: string
        description: Channel to rename
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: channels.rename error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from channels.rename method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - not_in_channel
                - not_authorized
                - invalid_name
                - name_taken
                - invalid_name_required
                - invalid_name_punctuation
                - invalid_name_maxlength
                - invalid_name_specials
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - user_is_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              channel:
                is_archived: false
                members: []
                is_member: false
                name: humans-and-bots
                is_private: false
                is_org_shared: false
                is_shared: false
                previous_names:
                - humans
                is_general: false
                creator: U2U85N1RZ
                unlinked: 0
                topic:
                  creator: U2U85N1RZ
                  value: here be robots
                  last_set: 1509475775
                id: C2U875RJN
                created: 1477445146
                name_normalized: humans-and-bots
                is_channel: true
                is_mpim: false
                purpose:
                  creator: U2U85N1RZ
                  value: the purpose of this channel is to bring people and robots
                    together in harmony
                  last_set: 1509475801
              ok: true
          schema:
            title: channels.rename schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response from channels.rename method
            properties:
              channel:
                $ref: '#/definitions/objs_channel'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_rename
      description: Renames a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.rename
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /groups.mark:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: ts
        type: number
        description: Timestamp of the most recently seen message.
        in: formData
      - name: channel
        type: string
        description: Private channel to set reading cursor in.
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: groups.mark error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from groups.mark method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - invalid_timestamp
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: groups.mark success schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from groups.mark method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_mark
      description: Sets the read cursor in a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.mark
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /mpim.list:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `mpim:read`'
        in: query
      tags:
      - mpim
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - mpim:read
      produces:
      - application/json
      operationId: mpim_list
      description: Lists multiparty direct message channels for the calling user.
      externalDocs:
        url: https://api.slack.com/methods/mpim.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /channels.setPurpose:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: purpose
        type: string
        description: The new purpose
        in: formData
      - name: channel
        type: string
        description: Channel to set the purpose of
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: channels.setPurpose error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from channels.setPurpose method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - not_in_channel
                - is_archived
                - too_long
                - user_is_restricted
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
              purpose: My special purpose
          schema:
            title: channels.setPurpose schema
            type: object
            required:
            - ok
            - purpose
            additionalProperties: true
            description: Schema for successful response from channels.setPurpose method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
              purpose:
                type: string
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_setPurpose
      description: Sets the purpose for a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.setPurpose
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /apps.permissions.request:
    get:
      parameters:
      - name: scopes
        type: string
        description: A comma separated list of scopes to request for
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `none`'
        in: query
      - name: trigger_id
        type: string
        description: Token used to trigger the permissions API
        in: query
      tags:
      - apps.permissions
      - apps
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_trigger_id
          schema:
            title: apps.permissions.request error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from apps.permissions.request method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - invalid_trigger
                - trigger_exchanged
                - invalid_scope
                - invalid_user
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Standard failure response when trigger_id is invalid
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: apps.permissions.request schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from apps.permissions.request
              method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Standard success response when used with a user token
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: apps_permissions_request
      description: Allows an app to request additional scopes
      externalDocs:
        url: https://api.slack.com/methods/apps.permissions.request
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /reminders.add:
    post:
      parameters:
      - name: text
        type: string
        description: The content of the reminder
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `reminders:write`'
        in: header
      - name: user
        type: string
        description: The user who will receive the reminder. If no user is specified,
          the reminder will go to user who created it.
        in: formData
      - name: time
        type: string
        description: 'When this reminder should happen: the Unix timestamp (up to
          five years from now), the number of seconds until the reminder (if within
          24 hours), or a natural language description (Ex. "in 15 minutes," or "every
          Thursday")'
        in: formData
      tags:
      - reminders
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - reminders:write
      produces:
      - application/json
      operationId: reminders_add
      description: Creates a reminder.
      externalDocs:
        url: https://api.slack.com/methods/reminders.add
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /usergroups.update:
    post:
      parameters:
      - name: handle
        type: string
        description: A mention handle. Must be unique among channels, users and User
          Groups.
        in: formData
      - name: description
        type: string
        description: A short description of the User Group.
        in: formData
      - name: channels
        type: string
        description: A comma separated string of encoded channel IDs for which the
          User Group uses as a default.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `usergroups:write`'
        in: header
      - name: include_count
        type: boolean
        description: Include the number of users in the User Group.
        in: formData
      - name: usergroup
        type: string
        description: The encoded ID of the User Group to update.
        in: formData
      - name: name
        type: string
        description: A name for the User Group. Must be unique among User Groups.
        in: formData
      tags:
      - usergroups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              usergroup:
                handle: marketing-team
                name: Marketing Team
                deleted_by: null
                user_count: 1
                updated_by: U060R4BJ4
                date_create: 1447096577
                users:
                - U060R4BJ4
                - U060RNRCZ
                date_update: 1447102109
                team_id: T060R4BHN
                is_usergroup: true
                auto_type: null
                description: Marketing gurus, PR experts and product advocates.
                is_external: false
                id: S0616NG6M
                created_by: U060R4BJ4
                date_delete: 0
                prefs:
                  groups: []
                  channels: []
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - usergroups:write
      produces:
      - application/json
      operationId: usergroups_update
      description: Update an existing User Group
      externalDocs:
        url: https://api.slack.com/methods/usergroups.update
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.unarchive:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: channel
        type: string
        description: ID of conversation to unarchive
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: conversations.unarchive error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.unarchive method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - method_not_supported_for_channel_type
                - missing_scope
                - channel_not_found
                - not_archived
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_restricted
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - team_added_to_org
                - missing_charset
                - superfluous_charset
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: conversations.unarchive success schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from conversations.unarchive
              method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_unarchive
      description: Reverses conversation archival.
      externalDocs:
        url: https://api.slack.com/methods/conversations.unarchive
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /files.delete:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `files:write:user`'
        in: header
      - name: file
        type: string
        description: ID of file to delete.
        in: formData
      tags:
      - files
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: files.delete error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response files.delete method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - file_not_found
                - file_deleted
                - cant_delete_file
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: files.delete schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response files.delete method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - files:write:user
      produces:
      - application/json
      operationId: files_delete
      description: Deletes a file.
      externalDocs:
        url: https://api.slack.com/methods/files.delete
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.setTopic:
    post:
      parameters:
      - name: topic
        type: string
        description: The new topic string. Does not support formatting or linkification.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: channel
        type: string
        description: Conversation to set the topic of
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: conversations.setTopic error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.setTopic method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - method_not_supported_for_channel_type
                - missing_scope
                - channel_not_found
                - not_in_channel
                - is_archived
                - too_long
                - user_is_restricted
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: conversations.setTopic success schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response from conversations.setTopic
              method
            properties:
              channel:
                $ref: '#/definitions/objs_conversation'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_setTopic
      description: Sets the topic for a conversation.
      externalDocs:
        url: https://api.slack.com/methods/conversations.setTopic
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.info:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:read`'
        in: query
      - name: channel
        type: string
        description: Conversation ID to learn more about
        in: query
      - name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for this conversation.
          Defaults to `false`
        in: query
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: conversations.info error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.info method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - missing_scope
                - channel_not_found
                - team_added_to_org
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response when a channel cannot be found
        200:
          examples:
            application/json:
              channel:
                is_archived: false
                last_read: 1502126650.228446
                is_member: true
                name: general
                is_private: false
                is_pending_ext_shared: false
                is_org_shared: false
                is_group: false
                num_members: 23
                is_im: false
                is_shared: false
                previous_names:
                - specifics
                - abstractions
                - etc
                is_general: true
                is_ext_shared: false
                creator: W012A3BCD
                unlinked: 0
                topic:
                  creator: W012A3BCD
                  value: For public discussion of generalities
                  last_set: 1449709364
                is_read_only: false
                created: 1449252889
                id: C012AB3CD
                name_normalized: general
                is_channel: true
                purpose:
                  creator: W012A3BCD
                  value: This part of the workspace is for fun. Make fun here.
                  last_set: 1449709364
                is_mpim: false
                locale: en-US
                pending_shared: []
              ok: true
          schema:
            title: conversations.info success schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response conversations.info
            properties:
              channel:
                $ref: '#/definitions/objs_conversation'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response for a public channel. (Also, a response
            from a private channel and a multi-party IM is very similar to this example.)
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
      produces:
      - application/json
      operationId: conversations_info
      description: Retrieve information about a conversation.
      externalDocs:
        url: https://api.slack.com/methods/conversations.info
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /users.identity:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `identity.basic`'
        in: query
      tags:
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: account_inactive
          schema:
            title: users.identity error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from users.identity method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              user:
                name: Sonny Whether
                id: U0G9QF9C6
              ok: true
              team:
                id: T0G9PQBBK
          schema:
            title: users.identity schema
            description: Schema for successful response from users.identity method
            items:
            - type: object
              required:
              - ok
              - user
              - team
              additionalProperties: true
              description: Schema for 'identity.basic' scope
              properties:
                user:
                  required:
                  - name
                  - id
                  additionalProperties: true
                  type: object
                  properties:
                    name:
                      type: string
                    id:
                      $ref: '#/definitions/defs_user_id'
                ok:
                  $ref: '#/definitions/defs_ok_true'
                team:
                  required:
                  - id
                  additionalProperties: true
                  type: object
                  properties:
                    id:
                      $ref: '#/definitions/defs_team'
            - type: object
              required:
              - ok
              - user
              - team
              additionalProperties: true
              description: Schema for 'identity.basic,identity.email' scopes
              properties:
                user:
                  required:
                  - name
                  - id
                  - email
                  additionalProperties: true
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    id:
                      $ref: '#/definitions/defs_user_id'
                    name:
                      type: string
                ok:
                  $ref: '#/definitions/defs_ok_true'
                team:
                  required:
                  - id
                  additionalProperties: true
                  type: object
                  properties:
                    id:
                      $ref: '#/definitions/defs_team'
            - type: object
              required:
              - ok
              - user
              - team
              additionalProperties: true
              description: Schema for 'identity.basic,identity.avatar' scopes
              properties:
                user:
                  required:
                  - name
                  - id
                  - image_24
                  - image_32
                  - image_48
                  - image_72
                  - image_192
                  - image_512
                  additionalProperties: true
                  type: object
                  properties:
                    name:
                      type: string
                    image_72:
                      type: string
                      format: url
                    image_192:
                      type: string
                      format: url
                    image_512:
                      type: string
                      format: url
                    image_48:
                      type: string
                      format: url
                    id:
                      $ref: '#/definitions/defs_user_id'
                    image_32:
                      type: string
                      format: url
                    image_24:
                      type: string
                      format: url
                ok:
                  $ref: '#/definitions/defs_ok_true'
                team:
                  required:
                  - id
                  additionalProperties: true
                  type: object
                  properties:
                    id:
                      $ref: '#/definitions/defs_team'
            - type: object
              required:
              - ok
              - user
              - team
              additionalProperties: true
              description: Schema for 'identity.basic,identity.team' scopes
              properties:
                user:
                  required:
                  - name
                  - id
                  additionalProperties: true
                  type: object
                  properties:
                    name:
                      type: string
                    id:
                      $ref: '#/definitions/defs_user_id'
                ok:
                  $ref: '#/definitions/defs_ok_true'
                team:
                  required:
                  - id
                  - name
                  - domain
                  - image_34
                  - image_44
                  - image_68
                  - image_88
                  - image_102
                  - image_132
                  - image_230
                  - image_default
                  additionalProperties: true
                  type: object
                  properties:
                    name:
                      type: string
                    image_102:
                      type: string
                      format: url
                    image_44:
                      type: string
                      format: url
                    image_default:
                      type: boolean
                    image_230:
                      type: string
                      format: url
                    image_34:
                      type: string
                      format: url
                    image_88:
                      type: string
                      format: url
                    id:
                      $ref: '#/definitions/defs_team'
                    domain:
                      type: string
                    image_132:
                      type: string
                      format: url
                    image_68:
                      type: string
                      format: url
          description: 'You will receive at a minimum the following information:'
      security:
      - slackAuth:
        - identity.basic
      produces:
      - application/json
      operationId: users_identity
      description: Get a user's identity.
      externalDocs:
        url: https://api.slack.com/methods/users.identity
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /pins.remove:
    post:
      parameters:
      - name: file_comment
        type: string
        description: File comment to un-pin.
        in: formData
      - name: timestamp
        type: number
        description: Timestamp of the message to un-pin.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `pins:write`'
        in: header
      - name: file
        type: string
        description: File to un-pin.
        in: formData
      - name: channel
        type: string
        description: Channel where the item is pinned to.
        in: formData
      tags:
      - pins
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: no_pin
          schema:
            title: pins.remove error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from pins.remove method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - bad_timestamp
                - file_not_found
                - file_comment_not_found
                - message_not_found
                - no_item_specified
                - not_pinned
                - permission_denied
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_typ
                - missing_post_typ
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeou
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: pins.remove schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from pins.remove method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - pins:write
      produces:
      - application/json
      operationId: pins_remove
      description: Un-pins an item from a channel.
      externalDocs:
        url: https://api.slack.com/methods/pins.remove
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /channels.history:
    get:
      parameters:
      - name: count
        type: integer
        description: Number of messages to return, between 1 and 1000.
        in: query
      - name: unreads
        type: boolean
        description: Include `unread_count_display` in the output?
        in: query
      - name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:history`'
        in: query
      - name: oldest
        type: number
        description: Start of time range of messages to include in results.
        in: query
      - name: channel
        type: string
        description: Channel to fetch history for.
        in: query
      - name: latest
        type: number
        description: End of time range of messages to include in results.
        in: query
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: channels.history error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response channels.history method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - invalid_ts_latest
                - invalid_ts_oldest
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Error response when the specified channel cannot be found
        200:
          examples:
            application/json:
              messages:
              - user: U2147483896
                type: message
                ts: 1358546515.000008
                text: Hello
              - user: U2147483896
                type: message
                ts: 1358546515.000007
                text: World
                reactions:
                - name: space_invader
                  users:
                  - U1
                  - U2
                  - U3
                  count: 3
                - name: sweet_potato
                  users:
                  - U1
                  - U2
                  - U3
                  - U4
                  - U5
                  count: 5
                is_starred: true
              - type: something_else
                ts: 1358546515.000007
              - type: message
                ts: 1503435956.000247
                text: Containment unit is 98% full
                subtype: bot_message
                attachments:
                - text: Don't get too attached
                  fallback: This is an attachment fallback
                  id: 1
                username: ecto1138
                bot_id: B19LU7CSY
              latest: 1358547726.000003
              ok: true
              has_more: false
          schema:
            title: channels.history success schema
            type: object
            required:
            - ok
            - messages
            - has_more
            additionalProperties: true
            description: Schema for successful response channels.history method
            properties:
              has_more:
                type: boolean
              ok:
                $ref: '#/definitions/defs_ok_true'
              messages:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/objs_message'
          description: Typical success response containing the channel's history
      security:
      - slackAuth:
        - channels:history
      produces:
      - application/json
      operationId: channels_history
      description: Fetches history of messages and events from a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.history
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /reminders.list:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `reminders:read`'
        in: query
      tags:
      - reminders
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - reminders:read
      produces:
      - application/json
      operationId: reminders_list
      description: Lists all reminders created by or for a given user.
      externalDocs:
        url: https://api.slack.com/methods/reminders.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /users.setPhoto:
    post:
      parameters:
      - name: image
        type: string
        description: File contents via `multipart/form-data`.
        in: formData
      - name: crop_w
        type: integer
        description: Width/height of crop box (always square)
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users.profile:write`'
        in: formData
      - name: crop_y
        type: integer
        description: Y coordinate of top-left corner of crop box
        in: formData
      - name: crop_x
        type: integer
        description: X coordinate of top-left corner of crop box
        in: formData
      tags:
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - users.profile:write
      produces:
      - application/json
      operationId: users_setPhoto
      description: Set the user profile photo
      externalDocs:
        url: https://api.slack.com/methods/users.setPhoto
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /dnd.endDnd:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `dnd:write`'
        in: header
      tags:
      - dnd
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - dnd:write
      produces:
      - application/json
      operationId: dnd_endDnd
      description: Ends the current user's Do Not Disturb session immediately.
      externalDocs:
        url: https://api.slack.com/methods/dnd.endDnd
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.join:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: channel
        type: string
        description: ID of conversation to join
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: is_archived
          schema:
            title: conversations.join error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.join method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - method_not_supported_for_channel_type
                - missing_scope
                - channel_not_found
                - is_archived
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_restricted
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - team_added_to_org
                - missing_charset
                - superfluous_charset
                type: string
          description: Typical error response if the conversation is archived and
            cannot be joined
        200:
          examples:
            application/json:
              warning: already_in_channel
              channel:
                is_archived: false
                name: general
                is_member: true
                is_private: false
                is_pending_ext_shared: false
                is_org_shared: false
                is_group: false
                is_im: false
                is_shared: false
                is_general: true
                is_ext_shared: false
                previous_names: []
                creator: U061F7AUR
                unlinked: 0
                topic:
                  creator: 
                  value: Which widget do you worry about?
                  last_set: 0
                created: 1449252889
                id: C061EG9SL
                name_normalized: general
                is_channel: true
                is_mpim: false
                purpose:
                  creator: 
                  value: For widget discussion
                  last_set: 0
                pending_shared: []
              ok: true
              response_metadata:
                warnings:
                - already_in_channel
          schema:
            title: conversations.join success schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response from conversations.join method
            properties:
              warning:
                type: string
              channel:
                $ref: '#/definitions/objs_conversation'
              ok:
                $ref: '#/definitions/defs_ok_true'
              response_metadata:
                title: Response metadata
                type: object
                properties:
                  warnings:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: string
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: conversations_join
      description: Joins an existing conversation.
      externalDocs:
        url: https://api.slack.com/methods/conversations.join
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /channels.invite:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: user
        type: string
        description: User to invite to channel.
        in: formData
      - name: channel
        type: string
        description: Channel to invite user to.
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: cant_invite
          schema:
            title: channels.invite error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response channels.invite method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - user_not_found
                - cant_invite_self
                - not_in_channel
                - already_in_channel
                - is_archived
                - cant_invite
                - too_many_users
                - ura_max_channels
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_restricted
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - team_added_to_org
                - missing_charset
                - superfluous_charset
                type: string
          description: A somewhat typical error response
        200:
          examples:
            application/json:
              channel:
                last_read: 1503435963.000307
                is_archived: false
                latest:
                  user: U1QNSQB9U
                  type: message
                  ts: 1503435963.000307
                  text: <@U1QNSQB9U|protobot> has left the channel
                  subtype: channel_leave
                is_member: true
                name: busting
                is_private: false
                members:
                - U0G9QF9C6
                - U1QNSQB9U
                is_org_shared: false
                unread_count_display: 0
                is_shared: false
                previous_names: []
                is_general: false
                creator: U0G9QF9C6
                topic:
                  creator: U0G9QF9C6
                  value: My Topic
                  last_set: 1503435128
                created: 1466025154
                id: C1H9RESGL
                name_normalized: busting
                is_channel: true
                is_mpim: false
                purpose:
                  creator: U0G9QF9C6
                  value: My Purpose
                  last_set: 1503435128
                unread_count: 0
              ok: true
          schema:
            title: channels.invite error schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response channels.invite method
            properties:
              channel:
                $ref: '#/definitions/objs_channel'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_invite
      description: Invites a user to a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.invite
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /users.lookupByEmail:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users:read.email`'
        in: query
      - name: email
        type: string
        description: An email address belonging to a user in the workspace
        in: query
      tags:
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: users_not_found
          schema:
            title: users.lookupByEmail error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from users.lookupByEmail method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - users_not_found
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              user:
                is_primary_owner: false
                color: 9f69e7
                name: spengler
                is_restricted: false
                profile:
                  status_emoji: ':books:'
                  email: spengler@ghostbusters.example.com
                  image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  display_name_normalized: spengler
                  real_name_normalized: Egon Spengler
                  display_name: spengler
                  image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  status_text: Print is dead
                  real_name: Egon Spengler
                  avatar_hash: ge3b51ca72de
                  image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  team: T012AB3C4
                  image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                is_ultra_restricted: false
                tz_offset: -25200
                is_admin: true
                has_2fa: false
                updated: 1502138686
                team_id: T012AB3C4
                is_app_user: false
                id: W012A3CDE
                is_owner: false
                real_name: Egon Spengler
                tz_label: Pacific Daylight Time
                deleted: false
                tz: America/Los_Angeles
                is_bot: false
              ok: true
          schema:
            title: users.lookupByEmail success schema
            type: object
            required:
            - ok
            - user
            additionalProperties: true
            description: Schema for successful response from users.lookupByEmail method
            properties:
              user:
                $ref: '#/definitions/objs_user'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - users:read.email
      produces:
      - application/json
      operationId: users_lookupByEmail
      description: Find a user with an email address.
      externalDocs:
        url: https://api.slack.com/methods/users.lookupByEmail
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /users.list:
    get:
      parameters:
      - name: presence
        type: boolean
        description: Deprecated. Whether to include presence data in the output. Defaults
          to `false`. Setting this to `true` reduces performance, especially with
          large teams.
        in: query
      - name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users:read`'
        in: query
      - name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        in: query
      - name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for users. Defaults
          to `false`
        in: query
      tags:
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_cursor
          schema:
            title: users.list error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from users.list method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - invalid_cursor
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              members:
              - is_primary_owner: false
                color: 9f69e7
                name: spengler
                is_restricted: false
                profile:
                  status_emoji: ':books:'
                  email: spengler@ghostbusters.example.com
                  image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  display_name_normalized: spengler
                  real_name_normalized: Egon Spengler
                  display_name: spengler
                  image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  status_text: Print is dead
                  real_name: Egon Spengler
                  avatar_hash: ge3b51ca72de
                  image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  team: T012AB3C4
                  image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                is_ultra_restricted: false
                tz_offset: -25200
                is_admin: true
                has_2fa: false
                updated: 1502138686
                team_id: T012AB3C4
                is_app_user: false
                id: W012A3CDE
                is_owner: false
                real_name: spengler
                tz_label: Pacific Daylight Time
                deleted: false
                tz: America/Los_Angeles
                is_bot: false
              - is_primary_owner: false
                color: 9f69e7
                name: glinda
                is_restricted: false
                profile:
                  phone: 
                  image_72: https://a.slack-edge.com...png
                  image_512: https://a.slack-edge.com...png
                  email: glenda@south.oz.coven
                  title: Glinda the Good
                  image_192: https://a.slack-edge.com...png
                  last_name: Southgood
                  skype: 
                  image_1024: https://a.slack-edge.com...png
                  display_name_normalized: Glinda the Fairly Good
                  real_name_normalized: Glinda Southgood
                  display_name: Glinda the Fairly Good
                  image_48: https://a.slack-edge.com...png
                  real_name: Glinda Southgood
                  image_original: https://a.slack-edge.com...png
                  avatar_hash: 8fbdd10b41c6
                  image_32: https://a.slack-edge.com...png
                  image_24: https://a.slack-edge.com...png
                  first_name: Glinda
                is_ultra_restricted: false
                tz_offset: -25200
                is_admin: true
                has_2fa: false
                updated: 1480527098
                team_id: T0G9PQBBK
                id: W07QCRPA4
                is_owner: false
                real_name: Glinda Southgood
                tz_label: Pacific Daylight Time
                deleted: false
                tz: America/Los_Angeles
                is_bot: false
              response_metadata:
                next_cursor: dXNlcjpVMEc5V0ZYTlo=
              ok: true
              cache_ts: 1498777272
          schema:
            title: users.list schema
            type: object
            required:
            - ok
            - members
            - cache_ts
            additionalProperties: true
            description: Schema for successful response from users.list method
            properties:
              members:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/objs_user'
              ok:
                $ref: '#/definitions/defs_ok_true'
              cache_ts:
                type: integer
          description: Typical success response
      security:
      - slackAuth:
        - users:read
      produces:
      - application/json
      operationId: users_list
      description: Lists all users in a Slack team.
      externalDocs:
        url: https://api.slack.com/methods/users.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /emoji.list:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `emoji:read`'
        in: query
      tags:
      - emoji
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - emoji:read
      produces:
      - application/json
      operationId: emoji_list
      description: Lists custom emoji for a team.
      externalDocs:
        url: https://api.slack.com/methods/emoji.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /im.mark:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `im:write`'
        in: header
      - name: ts
        type: number
        description: Timestamp of the most recently seen message.
        in: formData
      - name: channel
        type: string
        description: Direct message channel to set reading cursor in.
        in: formData
      tags:
      - im
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: im.mark error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response im.mark method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - invalid_timestamp
                - not_in_channel
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: im.mark success schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response im.mark method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - im:write
      produces:
      - application/json
      operationId: im_mark
      description: Sets the read cursor in a direct message channel.
      externalDocs:
        url: https://api.slack.com/methods/im.mark
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /team.integrationLogs:
    get:
      parameters:
      - name: count
        type: string
        in: query
      - name: change_type
        type: string
        description: Filter logs with this change type. Defaults to all logs.
        in: query
      - name: app_id
        type: integer
        description: Filter logs to this Slack app. Defaults to all logs.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `admin`'
        in: query
      - name: user
        type: string
        description: "Filter logs generated by this user\u2019s actions. Defaults
          to all logs."
        in: query
      - name: service_id
        type: integer
        description: Filter logs to this service. Defaults to all logs.
        in: query
      - name: page
        type: string
        in: query
      tags:
      - team
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - admin
      produces:
      - application/json
      operationId: team_integrationLogs
      description: Gets the integration logs for the current team.
      externalDocs:
        url: https://api.slack.com/methods/team.integrationLogs
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /team.info:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `team:read`'
        in: query
      tags:
      - team
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: team.info error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from team.info method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revokedno_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
              team:
                name: My Team
                icon:
                  image_102: https://...
                  image_44: https://...
                  image_default: true
                  image_34: https://...
                  image_88: https://...
                  image_68: https://...
                  image_132: https://...
                enterprise_name: Umbrella Corporation
                email_domain: example.com
                id: T12345
                domain: example
                enterprise_id: E1234A12AB
          schema:
            title: team.info schema
            type: object
            required:
            - ok
            - team
            additionalProperties: true
            description: Schema for successful response from team.info method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
              team:
                $ref: '#/definitions/objs_team'
          description: Typical success response
      security:
      - slackAuth:
        - team:read
      produces:
      - application/json
      operationId: team_info
      description: Gets information about the current team.
      externalDocs:
        url: https://api.slack.com/methods/team.info
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /reminders.complete:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `reminders:write`'
        in: header
      - name: reminder
        type: string
        description: The ID of the reminder to be marked as complete
        in: formData
      tags:
      - reminders
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - reminders:write
      produces:
      - application/json
      operationId: reminders_complete
      description: Marks a reminder as complete.
      externalDocs:
        url: https://api.slack.com/methods/reminders.complete
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /search.files:
    get:
      parameters:
      - name: sort_dir
        type: string
        description: Change sort direction to ascending (`asc`) or descending (`desc`).
        in: query
      - name: query
        type: string
        description: Search query.
        in: query
      - name: sort
        type: string
        description: Return matches sorted by either `score` or `timestamp`.
        in: query
      - name: highlight
        type: boolean
        description: Pass a value of `true` to enable query highlight markers (see
          below).
        in: query
      - name: count
        type: string
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `search:read`'
        in: query
      - name: page
        type: string
        in: query
      tags:
      - search
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: No query passed
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              files:
                total: 3
                pagination:
                  total_count: 3
                  page: 1
                  per_page: 20
                  last: 3
                  page_count: 1
                  first: 1
                matches:
                - size: 1639034
                  external_type: 
                  ims: []
                  thumb_360_w: 360
                  thumb_160: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_160.png
                  title: computer.gif
                  name: computer.gif
                  permalink: https://eventsdemo.slack.com/files/U2U85N1RZ/F7H0D7ZBB/computer.gif
                  thumb_480_h: 300
                  mimetype: image/gif
                  is_public: true
                  user: U2U85N1RZ
                  comments_count: 1
                  pretty_type: GIF
                  timestamp: 1507850315
                  thumb_360_gif: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_360.gif
                  thumb_80: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_80.png
                  top_file: false
                  thumb_360_h: 225
                  public_url_shared: false
                  original_w: 500
                  editable: false
                  score: 0.38899223746309
                  permalink_public: https://slack-files.com/T2U81E2BB-F7H0D7ZBB-85b7f5557e
                  reactions:
                  - name: stuck_out_tongue_winking_eye
                    users:
                    - U2U85N1RZ
                    count: 1
                  preview: null
                  url_private: https://files.slack.com/files-pri/T2U81E2BB-F7H0D7ZBB/computer.gif
                  thumb_480: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_480.png
                  thumb_64: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_64.png
                  mode: hosted
                  created: 1507850315
                  id: F7H0D7ZBB
                  thumb_480_gif: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_480.gif
                  is_external: false
                  groups: []
                  thumb_360: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_360.png
                  channels: []
                  username: 
                  display_as_bot: false
                  url_private_download: https://files.slack.com/files-pri/T2U81E2BB-F7H0D7ZBB/download/computer.gif
                  image_exif_rotation: 1
                  thumb_480_w: 480
                  original_h: 313
                  filetype: gif
                  deanimate_gif: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_deanimate_gif.png
                paging:
                  total: 3
                  page: 1
                  count: 20
                  pages: 1
              ok: true
              query: computer.gif
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - search:read
      produces:
      - application/json
      operationId: search_files
      description: Searches for files matching a query.
      externalDocs:
        url: https://api.slack.com/methods/search.files
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /chat.unfurl:
    post:
      parameters:
      - name: user_auth_message
        type: string
        description: Provide a simply-formatted string to send as an ephemeral message
          to the user as invitation to authenticate further and enable full unfurling
          behavior
        in: formData
      - name: user_auth_required
        type: boolean
        description: Set to `true` or `1` to indicate the user must install your Slack
          app to trigger unfurls for this domain
        in: formData
      - name: unfurls
        type: string
        description: URL-encoded JSON map with keys set to URLs featured in the the
          message, pointing to their unfurl message attachments.
        in: formData
      - name: ts
        type: string
        description: Timestamp of the message to add unfurl behavior to.
        in: formData
      - name: user_auth_url
        type: string
        description: Send users to this custom URL where they will complete authentication
          in your app to fully trigger unfurling. Value should be properly URL-encoded.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `links:write`'
        in: header
      - name: channel
        type: string
        description: Channel ID of the message
        in: formData
      tags:
      - chat
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: cannot_unfurl_url
          schema:
            title: chat.unfurl error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from chat.unfurl method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - cannot_unfurl_url
                - cannot_find_service
                - missing_unfurls
                - cannot_prompt
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: chat.unfurl success schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from chat.unfurl method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical, minimal success response
      security:
      - slackAuth:
        - links:write
      produces:
      - application/json
      operationId: chat_unfurl
      description: Provide custom unfurl behavior for user-posted URLs
      externalDocs:
        url: https://api.slack.com/methods/chat.unfurl
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /usergroups.create:
    post:
      parameters:
      - name: handle
        type: string
        description: A mention handle. Must be unique among channels, users and User
          Groups.
        in: formData
      - name: name
        type: string
        description: A name for the User Group. Must be unique among User Groups.
        in: formData
      - name: channels
        type: string
        description: A comma separated string of encoded channel IDs for which the
          User Group uses as a default.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `usergroups:write`'
        in: header
      - name: include_count
        type: boolean
        description: Include the number of users in each User Group.
        in: formData
      - name: description
        type: string
        description: A short description of the User Group.
        in: formData
      tags:
      - usergroups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - usergroups:write
      produces:
      - application/json
      operationId: usergroups_create
      description: Create a User Group
      externalDocs:
        url: https://api.slack.com/methods/usergroups.create
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /groups.rename:
    post:
      parameters:
      - name: validate
        type: boolean
        description: Whether to return errors on invalid channel name instead of modifying
          it to meet the specified criteria.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: name
        type: string
        description: New name for private channel.
        in: formData
      - name: channel
        type: string
        description: Private channel to rename
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_rename
      description: Renames a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.rename
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /im.open:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `im:write`'
        in: header
      - name: return_im
        type: boolean
        description: Boolean, indicates you want the full IM channel definition in
          the response.
        in: formData
      - name: user
        type: string
        description: User to open a direct message channel with.
        in: formData
      - name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for this im. Defaults
          to `false`
        in: formData
      tags:
      - im
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: im.open error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from im.open method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - user_not_found
                - user_not_visible
                - user_disabled
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              channel:
                id: D947RLWRX
              ok: true
          schema:
            title: im.open success schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response from im.open method
            properties:
              no_op:
                type: boolean
              channel:
                required:
                - id
                additionalProperties: true
                type: object
                properties:
                  is_open:
                    type: boolean
                  latest:
                    $ref: '#/definitions/objs_message'
                  unread_count:
                    type: number
                  is_im:
                    type: boolean
                  user:
                    $ref: '#/definitions/defs_user_id'
                  unread_count_display:
                    type: number
                  id:
                    $ref: '#/definitions/defs_dm_id'
                  created:
                    type: string
                  last_read:
                    $ref: '#/definitions/defs_ts'
              already_open:
                type: boolean
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - im:write
      produces:
      - application/json
      operationId: im_open
      description: Opens a direct message channel.
      externalDocs:
        url: https://api.slack.com/methods/im.open
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.invite:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: users
        type: string
        description: A comma separated list of user IDs. Up to 30 users may be listed.
        in: formData
      - name: channel
        type: string
        description: The ID of the public or private channel to invite user(s) to.
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: method_not_supported_for_channel_type
          schema:
            title: conversations.invite error schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for error response from conversations.invite method
            properties:
              errors:
                title: errors is returned when an error associates an user
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  required:
                  - ok
                  - error
                  additionalProperties: true
                  type: object
                  properties:
                    user:
                      $ref: '#/definitions/defs_user_id'
                    ok:
                      $ref: '#/definitions/defs_ok_false'
                    error:
                      enum:
                      - method_not_supported_for_channel_type
                      - missing_scope
                      - channel_not_found
                      - user_not_found
                      - cant_invite_self
                      - not_in_channel
                      - already_in_channel
                      - is_archived
                      - cant_invite
                      - too_many_users
                      - ura_max_channels
                      - not_authed
                      - invalid_auth
                      - account_inactive
                      - user_is_bot
                      - user_is_restricted
                      - user_is_ultra_restricted
                      - invalid_arg_name
                      - invalid_array_arg
                      - invalid_charset
                      - invalid_form_data
                      - invalid_post_type
                      - missing_post_type
                      - invalid_json
                      - json_not_object
                      - request_timeout
                      - upgrade_required
                      - team_added_to_org
                      - missing_charset
                      - superfluous_charset
                      type: string
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - method_not_supported_for_channel_type
                - missing_scope
                - channel_not_found
                - user_not_found
                - cant_invite_self
                - not_in_channel
                - already_in_channel
                - is_archived
                - cant_invite
                - too_many_users
                - ura_max_channels
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_restricted
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - team_added_to_org
                - missing_charset
                - superfluous_charset
                type: string
          description: Typical error response when an invite is attempted on a conversation
            type that does not support it
        200:
          examples:
            application/json:
              channel:
                is_archived: false
                last_read: 1502126650.228446
                is_member: true
                name: general
                is_private: false
                is_pending_ext_shared: false
                is_org_shared: false
                is_group: false
                num_members: 23
                is_im: false
                is_shared: false
                previous_names:
                - specifics
                - abstractions
                - etc
                is_general: true
                is_ext_shared: false
                creator: W012A3BCD
                unlinked: 0
                topic:
                  creator: W012A3BCD
                  value: For public discussion of generalities
                  last_set: 1449709364
                is_read_only: false
                created: 1449252889
                id: C012AB3CD
                name_normalized: general
                is_channel: true
                purpose:
                  creator: W012A3BCD
                  value: This part of the workspace is for fun. Make fun here.
                  last_set: 1449709364
                is_mpim: false
                locale: en-US
                pending_shared: []
              ok: true
          schema:
            title: conversations.invite error schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response from conversations.invite
              method
            properties:
              channel:
                $ref: '#/definitions/objs_conversation'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response when an invitation is extended
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_invite
      description: Invites users to a channel.
      externalDocs:
        url: https://api.slack.com/methods/conversations.invite
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.setPurpose:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: purpose
        type: string
        description: A new, specialer purpose
        in: formData
      - name: channel
        type: string
        description: Conversation to set the purpose of
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: conversations.setPurpose error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.setPurpose method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - method_not_supported_for_channel_type
                - missing_scope
                - channel_not_found
                - not_in_channel
                - is_archived
                - too_long
                - user_is_restricted
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: conversations.setPurpose success schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response from conversations.setPurpose
              method
            properties:
              channel:
                $ref: '#/definitions/objs_conversation'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_setPurpose
      description: Sets the purpose for a conversation.
      externalDocs:
        url: https://api.slack.com/methods/conversations.setPurpose
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /chat.getPermalink:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `none`'
        in: query
      - name: message_ts
        type: number
        description: A message's `ts` value, uniquely identifying it within a channel
        in: query
      - name: channel
        type: string
        description: The ID of the conversation or channel containing the message
        in: query
      tags:
      - chat
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: chat.getPermalink error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from chat.getPermalink method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - message_not_found
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Error response when channel cannot be found
        200:
          examples:
            application/json:
              permalink: https://ghostbusters.slack.com/archives/C1H9RESGA/p135854651500008
              channel: C1H9RESGA
              ok: true
          schema:
            title: chat.getPermalink success schema
            type: object
            required:
            - ok
            - channel
            - permalink
            additionalProperties: true
            description: Schema for successful response chat.getPermalink
            properties:
              permalink:
                type: string
                format: uri
              channel:
                $ref: '#/definitions/defs_channel'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Standard success response
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: chat_getPermalink
      description: Retrieve a permalink URL for a specific extant message
      externalDocs:
        url: https://api.slack.com/methods/chat.getPermalink
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /mpim.history:
    get:
      parameters:
      - name: count
        type: integer
        description: Number of messages to return, between 1 and 1000.
        in: query
      - name: unreads
        type: boolean
        description: Include `unread_count_display` in the output?
        in: query
      - name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `mpim:history`'
        in: query
      - name: oldest
        type: number
        description: Start of time range of messages to include in results.
        in: query
      - name: channel
        type: string
        description: Multiparty direct message to fetch history for.
        in: query
      - name: latest
        type: number
        description: End of time range of messages to include in results.
        in: query
      tags:
      - mpim
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              messages:
              - user: U2147483896
                type: message
                ts: 1358546515.000008
                text: Hello
              - user: U2147483896
                type: message
                ts: 1358546515.000007
                text: World
                is_starred: true
              - type: something_else
                ts: 1358546515.000007
              latest: 1358547726.000003
              ok: true
              has_more: false
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - mpim:history
      produces:
      - application/json
      operationId: mpim_history
      description: Fetches history of messages and events from a multiparty direct
        message.
      externalDocs:
        url: https://api.slack.com/methods/mpim.history
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /channels.list:
    get:
      parameters:
      - name: exclude_members
        type: boolean
        description: Exclude the `members` collection from each `channel`
        in: query
      - name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:read`'
        in: query
      - name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        in: query
      - name: exclude_archived
        type: boolean
        description: Exclude archived channels from the list
        in: query
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: channels.list error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response channels.list method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              response_metadata:
                next_cursor: dGVhbTpDMUg5UkVTR0w=
              ok: true
              channels:
              - is_archived: false
                members:
                - U0G9QF9C6
                - U0G9WFXNZ
                is_member: true
                name: random
                is_private: false
                num_members: 2
                is_org_shared: false
                is_shared: false
                previous_names: []
                is_general: false
                creator: U0G9QF9C6
                topic:
                  creator: U0G9QF9C6
                  value: Other stuff
                  last_set: 1449709352
                id: C0G9QF9GW
                created: 1449709280
                name_normalized: random
                is_channel: true
                is_mpim: false
                purpose:
                  creator: 
                  value: A place for non-work-related flimflam, faffing, hodge-podge
                    or jibber-jabber you'd prefer to keep out of more focused work-related
                    channels.
                  last_set: 0
              - is_archived: false
                members:
                - U0G9QF9C6
                - U0G9WFXNZ
                is_member: true
                name: general
                is_private: false
                num_members: 2
                is_org_shared: false
                is_shared: false
                previous_names: []
                is_general: true
                creator: U0G9QF9C6
                topic:
                  creator: U0G9QF9C6
                  value: Talk about anything!
                  last_set: 1449709364
                id: C0G9QKBBL
                created: 1449709280
                name_normalized: general
                is_channel: true
                is_mpim: false
                purpose:
                  creator: U0G9QF9C6
                  value: To talk about anything!
                  last_set: 1449709334
          schema:
            title: channels.list success schema
            type: object
            required:
            - ok
            - channels
            additionalProperties: true
            description: Schema for successful response channels.list method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
              channels:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/objs_channel'
          description: Typical cursored success response
      security:
      - slackAuth:
        - channels:read
      produces:
      - application/json
      operationId: channels_list
      description: Lists all channels in a Slack team.
      externalDocs:
        url: https://api.slack.com/methods/channels.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /groups.unarchive:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: channel
        type: string
        description: Private channel to unarchive
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_unarchive
      description: Unarchives a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.unarchive
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /dnd.teamInfo:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `dnd:read`'
        in: query
      - name: users
        type: string
        description: Comma-separated list of users to fetch Do Not Disturb status
          for
        in: query
      tags:
      - dnd
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: dnd.teamInfo error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from dnd.teamInfo method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              users:
                U023BECGF:
                  dnd_enabled: true
                  next_dnd_end_ts: 1450423800
                  next_dnd_start_ts: 1450387800
                W058CJVAA:
                  dnd_enabled: false
                  next_dnd_end_ts: 1
                  next_dnd_start_ts: 1
              ok: true
          schema:
            title: dnd.teamInfo success schema
            type: object
            required:
            - ok
            - users
            additionalProperties: true
            description: Schema for successful response from dnd.teamInfo method
            properties:
              users:
                type: object
                additionalProperties: true
              ok:
                $ref: '#/definitions/defs_ok_true'
              cached:
                type: boolean
          description: Typical success response
      security:
      - slackAuth:
        - dnd:read
      produces:
      - application/json
      operationId: dnd_teamInfo
      description: Retrieves the Do Not Disturb status for users on a team.
      externalDocs:
        url: https://api.slack.com/methods/dnd.teamInfo
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /apps.permissions.resources.list:
    get:
      parameters:
      - name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `none`'
        in: query
      - name: limit
        type: integer
        description: The maximum number of items to return.
        in: query
      tags:
      - apps.permissions.resources
      - apps
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_cursor
          schema:
            title: apps.permissions.resources.list error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from apps.permissions.resources.list
              method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - invalid_cursor
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              response_metadata:
                next_cursor: dGVhbTpDMUg5UkVTR0w=
              resources:
              - type: team
                id: T0DES3UAN
              - type: app_home
                id: D024BFF1M
              - type: channel
                id: C024BE91L
              ok: true
          schema:
            title: apps.permissions.resources.list success schema
            type: object
            required:
            - ok
            - resources
            additionalProperties: true
            description: Schema for successful response apps.permissions.resources.list
              method
            properties:
              response_metadata:
                required:
                - next_cursor
                additionalProperties: true
                type: object
                properties:
                  next_cursor:
                    type: string
                    x-examples:
                    - dGVhbTpDMUg5UkVTR0w=
              resources:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      title: The type of resource the `id` corresponds to
                      type: string
                      x-examples:
                      - team
                      - channel
                      - mpim
                    id:
                      title: An ID for a resource
                      type: string
                      x-examples:
                      - T0DES3UAN
                      - C0ABC1ABC
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical successful paginated response
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: apps_permissions_resources_list
      description: Returns list of resource grants this app has on a team.
      externalDocs:
        url: https://api.slack.com/methods/apps.permissions.resources.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /users.deletePhoto:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users.profile:write`'
        in: formData
      tags:
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - users.profile:write
      produces:
      - application/json
      operationId: users_deletePhoto
      description: Delete the user profile photo
      externalDocs:
        url: https://api.slack.com/methods/users.deletePhoto
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /team.billableInfo:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `admin`'
        in: query
      - name: user
        type: string
        description: A user to retrieve the billable information for. Defaults to
          all users.
        in: query
      tags:
      - team
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - admin
      produces:
      - application/json
      operationId: team_billableInfo
      description: Gets billable users information for the current team.
      externalDocs:
        url: https://api.slack.com/methods/team.billableInfo
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /groups.info:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:read`'
        in: query
      - name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for this group. Defaults
          to `false`
        in: query
      - name: channel
        type: string
        description: Private channel to get info on
        in: query
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: groups.info error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response groups.info method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: groups.info success schema
            type: object
            required:
            - ok
            - group
            additionalProperties: true
            description: Schema for successful response groups.info method
            properties:
              group:
                $ref: '#/definitions/objs_group'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:read
      produces:
      - application/json
      operationId: groups_info
      description: Gets information about a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.info
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /channels.replies:
    get:
      parameters:
      - name: thread_ts
        type: number
        description: Unique identifier of a thread's parent message
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:history`'
        in: query
      - name: channel
        type: string
        description: Channel to fetch thread from
        in: query
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: thread_not_found
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              has_more: false
              ok: true
              messages:
              - last_read: 1509484885.000082
                user: U2X9P5FEL
                reply_count: 2
                unread_count: 0
                thread_ts: 1485913694.000025
                subscribed: true
                type: message
                replies:
                - user: U2U85N1RZ
                  ts: 1509484424.000601
                - user: U2U85N1RZ
                  ts: 1509484885.000082
                ts: 1485913694.000025
                text: This is a channel message
              - user: U2U85N1RZ
                parent_user_id: U2X9P5FEL
                thread_ts: 1485913694.000025
                type: message
                ts: 1509484424.000601
                text: This is a thread reply
              - user: U2U85N1RZ
                parent_user_id: U2X9P5FEL
                thread_ts: 1485913694.000025
                type: message
                ts: 1509484885.000082
                text: This is another thread reply
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:history
      produces:
      - application/json
      operationId: channels_replies
      description: Retrieve a thread of messages posted to a channel
      externalDocs:
        url: https://api.slack.com/methods/channels.replies
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /reactions.list:
    get:
      parameters:
      - name: count
        type: string
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `reactions:read`'
        in: query
      - name: full
        type: boolean
        description: If true always return the complete reaction list.
        in: query
      - name: user
        type: string
        description: Show reactions made by this user. Defaults to the authed user.
        in: query
      - name: page
        type: string
        in: query
      tags:
      - reactions
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: reactions.list error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from reactions.list method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - user_not_found
                - not_authed
                - invalid_auth
                - account_inactiv
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              paging:
                total: 3
                page: 1
                count: 100
                pages: 1
              ok: true
              items:
              - type: message
                channel: C3UKJTQAC
                message:
                  ts: 1507849573.000090
                  text: 'Hello from Python! :tada:'
                  reactions:
                  - name: robot_face
                    users:
                    - U2U85N1RV
                    count: 1
                  subtype: bot_message
                  username: Shipit Notifications
                  bot_id: B4VLRLMKJ
              - file:
                  title: computer.gif
                  user: U2U85N1RV
                  comments_count: 1
                  username: 
                  reactions:
                  - name: stuck_out_tongue_winking_eye
                    users:
                    - U2U85N1RV
                    count: 1
                  created: 1507850315
                  channels:
                  - C2U7V2YA2
                comment:
                  user: U2U85N1RV
                  type: file_comment
                  timestamp: 1508286096
                  reactions:
                  - name: white_check_mark
                    users:
                    - U2U85N1RV
                    count: 1
                  id: Fc7LP08P1U
                  created: 1508286096
                  comment: This is a file comment
              - file:
                  size: 1639034
                  name: computer.gif
                  title: computer.gif
                  user: U2U85N1RV
                  comments_count: 1
                  reactions:
                  - name: stuck_out_tongue_winking_eye
                    users:
                    - U2U85N1RV
                    count: 1
                  username: 
                  id: F7H0D7ZA4
                  created: 1507850315
                  channels:
                  - C2U7V2YA2
                type: file
          schema:
            title: reactions.list schema
            type: object
            required:
            - ok
            - items
            additionalProperties: true
            description: Schema for successful response from reactions.list method
            properties:
              paging:
                $ref: '#/definitions/objs_paging'
              ok:
                $ref: '#/definitions/defs_ok_true'
              items:
                type: array
                items:
                  items:
                  - required:
                    - type
                    - channel
                    - message
                    additionalProperties: true
                    type: object
                    properties:
                      type:
                        enum:
                        - message
                        type: string
                      channel:
                        $ref: '#/definitions/defs_channel'
                      message:
                        $ref: '#/definitions/objs_message'
                  - required:
                    - type
                    - file
                    additionalProperties: true
                    type: object
                    properties:
                      file:
                        $ref: '#/definitions/objs_file'
                      type:
                        enum:
                        - file
                        type: string
                  - required:
                    - type
                    - file
                    - comment
                    additionalProperties: true
                    type: object
                    properties:
                      file:
                        $ref: '#/definitions/objs_file'
                      type:
                        enum:
                        - file_comment
                        type: string
                      comment:
                        $ref: '#/definitions/objs_comment'
          description: Typical success response
      security:
      - slackAuth:
        - reactions:read
      produces:
      - application/json
      operationId: reactions_list
      description: Lists reactions made by a user.
      externalDocs:
        url: https://api.slack.com/methods/reactions.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /files.comments.add:
    post:
      parameters:
      - name: comment
        type: string
        description: Text of the comment to add.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `files:write:user`'
        in: header
      - name: file
        type: string
        description: File to add a comment to.
        in: formData
      tags:
      - files.comments
      - files
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: file_not_found
          schema:
            title: files.comments.add error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from files.comments.add method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - file_not_found
                - file_deleted
                - no_comment
                - cant_add
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Artificial error response
        200:
          examples:
            application/json:
              ok: true
              comment:
                user: U1234567890
                timestamp: 1356032811
                id: Fc1234567890
                channel: C1234467890
                created: 1356032811
                comment: Everyone should take a moment to read this file.
          schema:
            title: files.comments.add schema
            type: object
            required:
            - ok
            - comment
            additionalProperties: true
            description: Schema for successful response files.comments.add method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
              comment:
                $ref: '#/definitions/objs_comment'
          description: Standard success response
      security:
      - slackAuth:
        - files:write:user
      produces:
      - application/json
      operationId: files_comments_add
      description: Add a comment to an existing file.
      externalDocs:
        url: https://api.slack.com/methods/files.comments.add
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /users.profile.get:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users.profile:read`'
        in: query
      - name: include_labels
        type: boolean
        description: Include labels for each ID in custom profile fields
        in: query
      - name: user
        type: string
        description: User to retrieve profile info for
        in: query
      tags:
      - users.profile
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: user_not_found
          schema:
            title: users.profile.get error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from users.profile.get method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - user_not_found
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              profile:
                status_emoji: ':books:'
                email: spengler@ghostbusters.example.com
                image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                display_name_normalized: spengler
                real_name_normalized: Egon Spengler
                display_name: spengler
                image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                status_text: Print is dead
                real_name: Egon Spengler
                avatar_hash: ge3b51ca72de
                image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                team: T012AB3C4
                image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
              ok: true
          schema:
            title: users.profile.get schema
            type: object
            required:
            - ok
            - profile
            additionalProperties: true
            description: Schema for successful response from users.profile.get method
            properties:
              profile:
                $ref: '#/definitions/objs_user_profile'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - users.profile:read
      produces:
      - application/json
      operationId: users_profile_get
      description: Retrieves a user's profile information.
      externalDocs:
        url: https://api.slack.com/methods/users.profile.get
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /channels.setTopic:
    post:
      parameters:
      - name: topic
        type: string
        description: The new topic
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: channel
        type: string
        description: Channel to set the topic of
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              topic: To picture topicality
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_setTopic
      description: Sets the topic for a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.setTopic
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /oauth.token:
    get:
      parameters:
      - name: client_secret
        type: string
        description: Issued when you created your application.
        in: query
      - name: code
        type: string
        description: The `code` param returned via the OAuth callback.
        in: query
      - name: single_channel
        type: boolean
        description: Request the user to add your app only to a single channel.
        in: query
      - name: client_id
        type: string
        description: Issued when you created your application.
        in: query
      - name: redirect_uri
        type: string
        description: This must match the originally submitted URI (if one was sent).
        in: query
      tags:
      - oauth
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_client_id
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              app_user_id: U0AB12ABC
              access_token: xoxa-access-token-string
              authorizing_user_id: U0HTT3Q0G
              token_type: app
              installer_user_id: U061F7AUR
              team_id: T061EG9Z9
              permissions:
              - resource_id: 0
                resource_type: channel
                scopes:
                - channels:read
                - chat:write:user
              ok: true
              app_id: A012345678
              team_name: Subarachnoid Workspace
              single_channel_id: C061EG9T2
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Success example using a workspace app produces a very different
            kind of response
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: oauth_token
      description: Exchanges a temporary OAuth verifier code for a workspace token.
      externalDocs:
        url: https://api.slack.com/methods/oauth.token
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /stars.list:
    get:
      parameters:
      - name: count
        type: string
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `stars:read`'
        in: query
      - name: page
        type: string
        in: query
      tags:
      - stars
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - stars:read
      produces:
      - application/json
      operationId: stars_list
      description: Lists stars for a user.
      externalDocs:
        url: https://api.slack.com/methods/stars.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /search.all:
    get:
      parameters:
      - name: sort_dir
        type: string
        description: Change sort direction to ascending (`asc`) or descending (`desc`).
        in: query
      - name: query
        type: string
        description: Search query. May contains booleans, etc.
        in: query
      - name: sort
        type: string
        description: Return matches sorted by either `score` or `timestamp`.
        in: query
      - name: count
        type: string
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `search:read`'
        in: query
      - name: highlight
        type: boolean
        description: Pass a value of `true` to enable query highlight markers (see
          below).
        in: query
      - name: page
        type: string
        in: query
      tags:
      - search
      responses:
        default:
          examples:
            application/json:
              provided: identify,bot:basic
              ok: false
              needed: search:read
              error: missing_scope
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              messages:
                total: 1
                pagination:
                  total_count: 1
                  page: 1
                  per_page: 20
                  last: 1
                  page_count: 1
                  first: 1
                matches:
                - iid: 35692677-e60e-43d9-ac45-1987cea88975
                  permalink: https://example.slack.com/archives/C2U86NC6M/p1508804330000296
                  previous:
                    iid: aba8603c-0543-4fb2-9118-a5ac85f3d138
                    user: U2U85HJ7R
                    type: message
                    ts: 1508804301.000026
                    text: Can you send me the Slack workflow diagram?
                    username: john
                  user: U2U85N1RZ
                  type: message
                  channel:
                    name: general
                    is_private: false
                    is_pending_ext_shared: false
                    is_org_shared: false
                    is_shared: false
                    is_ext_shared: false
                    id: C2U86NC6M
                    is_mpim: false
                    pending_shared: []
                  ts: 1508804330.000296
                  text: 'uploaded a file: <https://example.slack.com/files/U2U85N1RZ/F7PKF1NR7/slack_workflow_diagram.png|slack
                    workflow diagram> and commented: Sure! Here''s the workflow diagram!'
                  username: amy
                  next:
                    iid: 6f510ea1-e1d3-4f3f-bdb9-f9c6f6e9d609
                    user: U2U85HJ7R
                    type: message
                    ts: 1508804378.000219
                    text: Thanks!
                    username: john
                  team: T2U81E2FZ
                paging:
                  total: 1
                  page: 1
                  count: 20
                  pages: 1
              ok: true
              query: diagram
              files:
                total: 1
                pagination:
                  total_count: 1
                  page: 1
                  per_page: 20
                  last: 1
                  page_count: 1
                  first: 1
                matches:
                - size: 35705
                  external_type: 
                  ims: []
                  thumb_360_w: 128
                  thumb_160: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_160.png
                  title: slack workflow diagram
                  name: slack workflow diagram.png
                  permalink: https://example.slack.com/files/U2U85N1RZ/F7PKF1NR7/slack_workflow_diagram.png
                  mimetype: image/png
                  is_public: true
                  user: U2U85N1RZ
                  comments_count: 1
                  pretty_type: PNG
                  timestamp: 1508804330
                  thumb_80: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_80.png
                  top_file: false
                  thumb_360_h: 117
                  public_url_shared: false
                  original_w: 128
                  editable: false
                  score: 0.99982661240974
                  permalink_public: https://slack-files.com/T2U81E2FZ-F7PKF1NR7-bea9143f18
                  preview: null
                  url_private: https://files.slack.com/files-pri/T2U81E2FZ-F7PKF1NR7/slack_workflow_diagram.png
                  mode: hosted
                  initial_comment:
                    user: U2U85N1RZ
                    timestamp: 1508804330
                    is_intro: true
                    id: Fc7NLL52E7
                    created: 1508804330
                    comment: Sure! Here's the workflow diagram!
                  created: 1508804330
                  id: F7PKF1NR7
                  thumb_64: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_64.png
                  is_external: false
                  groups: []
                  thumb_360: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_360.png
                  channels: []
                  username: amy
                  display_as_bot: false
                  url_private_download: https://files.slack.com/files-pri/T2U81E2FZ-F7PKF1NR7/download/slack_workflow_diagram.png
                  image_exif_rotation: 1
                  filetype: png
                  original_h: 117
                paging:
                  total: 1
                  page: 1
                  count: 20
                  pages: 1
              posts:
                total: 0
                matches: []
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - search:read
      produces:
      - application/json
      operationId: search_all
      description: Searches for messages and files matching a query.
      externalDocs:
        url: https://api.slack.com/methods/search.all
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /groups.create:
    post:
      parameters:
      - name: validate
        type: boolean
        description: Whether to return errors on invalid channel name instead of modifying
          it to meet the specified criteria.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: name
        type: string
        description: Name of private channel to create
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: groups.create error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response groups.create method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - no_channel
                - restricted_action
                - name_taken
                - invalid_name_required
                - invalid_name_punctuation
                - invalid_name_maxlength
                - invalid_name_specials
                - invalid_name
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: groups.create success schema
            type: object
            required:
            - ok
            - group
            additionalProperties: true
            description: Schema for successful response groups.create method
            properties:
              group:
                $ref: '#/definitions/objs_group'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_create
      description: Creates a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.create
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /usergroups.disable:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `usergroups:write`'
        in: header
      - name: include_count
        type: boolean
        description: Include the number of users in the User Group.
        in: formData
      - name: usergroup
        type: string
        description: The encoded ID of the User Group to disable.
        in: formData
      tags:
      - usergroups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - usergroups:write
      produces:
      - application/json
      operationId: usergroups_disable
      description: Disable an existing User Group
      externalDocs:
        url: https://api.slack.com/methods/usergroups.disable
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /rtm.start:
    get:
      parameters:
      - name: no_latest
        type: boolean
        description: Exclude latest timestamps for channels, groups, mpims, and ims.
          Automatically sets `no_unreads` to `1`
        in: query
      - name: simple_latest
        type: boolean
        description: Return timestamp only for latest message object of each channel
          (improves performance).
        in: query
      - name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for users and channels.
          Defaults to `false`
        in: query
      - name: presence_sub
        type: boolean
        description: Only deliver presence events when requested by subscription.
          See [presence subscriptions](/docs/presence-and-status#subscriptions).
        in: query
      - name: no_unreads
        type: boolean
        description: Skip unread counts for each channel (improves performance).
        in: query
      - name: batch_presence_aware
        type: boolean
        description: Batch presence deliveries via subscription. Enabling changes
          the shape of `presence_change` events. See [batch presence](/docs/presence-and-status#batching).
        in: query
      - name: mpim_aware
        type: boolean
        description: Returns MPIMs to the client in the API response.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `rtm:stream`'
        in: query
      tags:
      - rtm
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: rtm.start error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from rtm.start method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - migration_in_progress
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: rtm.start success schema
            type: object
            required:
            - ok
            - bots
            - cache_ts
            - cache_ts_version
            - can_manage_shared_channels
            - channels
            - groups
            - dnd
            - ims
            - latest_event_ts
            - non_threadable_channels
            - read_only_channels
            - self
            - subteams
            - thread_only_channels
            - team
            - url
            - users
            additionalProperties: true
            description: Schema for successful response from rtm.start method
            properties:
              ims:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/objs_conversation'
              can_manage_shared_channels:
                type: boolean
              thread_only_channels:
                type: array
              self:
                required:
                - created
                - id
                - manual_presence
                - prefs
                additionalProperties: true
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
                  created:
                    type: integer
                  prefs:
                    $ref: '#/definitions/prefs_prefs'
                  manual_presence:
                    type: string
              dnd:
                $ref: '#/definitions/objs_dnd'
              users:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/objs_user'
              latest_event_ts:
                type: string
              cache_version:
                type: string
              non_threadable_channels:
                type: array
              url:
                type: string
                format: uri
              mpims:
                type: array
                uniqueItems: true
                description: Mpim objects present for rtm.start. Can be null when
                  there are no mpims
                items:
                  items:
                  - type: null
                  - $ref: '#/definitions/objs_conversation'
              subteams:
                required:
                - all
                - self
                additionalProperties: true
                type: object
                properties:
                  self:
                    type: array
                  all:
                    type: array
              read_only_channels:
                type: array
              ok:
                $ref: '#/definitions/defs_ok_true'
              groups:
                type: array
                uniqueItems: true
                description: Group objects present for rtm.start. Can be null when
                  there are no groups
                items:
                  items:
                  - type: null
                  - $ref: '#/definitions/objs_conversation'
              cache_ts:
                type: integer
              channels:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/objs_conversation'
              bots:
                type: array
              cache_ts_version:
                type: string
              team:
                $ref: '#/definitions/objs_team'
              dead_pig:
                type: boolean
          description: Typical success response
      security:
      - slackAuth:
        - rtm:stream
      produces:
      - application/json
      operationId: rtm_start
      description: Starts a Real Time Messaging session.
      externalDocs:
        url: https://api.slack.com/methods/rtm.start
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /reactions.add:
    post:
      parameters:
      - name: name
        type: string
        description: Reaction (emoji) name.
        in: formData
      - name: file_comment
        type: string
        description: File comment to add reaction to.
        in: formData
      - name: timestamp
        type: number
        description: Timestamp of the message to add reaction to.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `reactions:write`'
        in: header
      - name: file
        type: string
        description: File to add reaction to.
        in: formData
      - name: channel
        type: string
        description: Channel where the message to add reaction to was posted.
        in: formData
      tags:
      - reactions
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: already_reacted
          schema:
            title: reactions.add error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from reactions.add method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - bad_timestamp
                - file_not_found
                - file_comment_not_found
                - message_not_found
                - no_item_specified
                - invalid_name
                - already_reacted
                - too_many_emoji
                - too_many_reactions
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: reactions.add schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from reactions.add method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - reactions:write
      produces:
      - application/json
      operationId: reactions_add
      description: Adds a reaction to an item.
      externalDocs:
        url: https://api.slack.com/methods/reactions.add
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /groups.list:
    get:
      parameters:
      - name: exclude_members
        type: boolean
        description: Exclude the `members` from each `group`
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:read`'
        in: query
      - name: exclude_archived
        type: boolean
        description: Don't return archived private channels.
        in: query
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: groups.list error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response groups.list method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: groups.list success schema
            type: object
            required:
            - ok
            - groups
            additionalProperties: true
            description: Schema for successful response groups.list method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
              groups:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/objs_group'
          description: Typical success response
      security:
      - slackAuth:
        - groups:read
      produces:
      - application/json
      operationId: groups_list
      description: Lists private channels that the calling user has access to.
      externalDocs:
        url: https://api.slack.com/methods/groups.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /im.list:
    get:
      parameters:
      - name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `im:read`'
        in: query
      - name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        in: query
      tags:
      - im
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: im.list error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from im.list method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - invalid_cursor
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ims:
              - user: USLACKBOT
                is_org_shared: false
                is_im: true
                id: D0G9QPY56
                created: 1449709280
                is_user_deleted: false
              - user: U0G9QF9C6
                is_org_shared: false
                is_im: true
                id: D1KL59A72
                created: 1466692204
                is_user_deleted: false
              - user: U0G9WFXNZ
                is_org_shared: false
                is_im: true
                id: D0G9XPFH9
                created: 1449722883
                is_user_deleted: false
              - user: W0HRJL7CK
                is_org_shared: false
                is_im: true
                id: D0HRHJSF7
                created: 1452098023
                is_user_deleted: false
              - user: U1GDBDGR3
                is_org_shared: false
                is_im: true
                id: D1GD7CHC0
                created: 1465834222
                is_user_deleted: true
              - user: U1QNSQB9U
                is_org_shared: false
                is_im: true
                id: D1QMF76M9
                created: 1468274703
                is_user_deleted: false
              - user: U6KR7BVFW
                is_org_shared: false
                is_im: true
                id: D6K48KKRN
                created: 1502210225
                is_user_deleted: false
              response_metadata:
                next_cursor: aW1faWQ6RDBCSDk1RExI=
              ok: true
          schema:
            title: im.list success schema
            type: object
            required:
            - ok
            - ims
            additionalProperties: true
            description: Schema for successful response im.list method
            properties:
              ims:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/definitions/objs_im'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - im:read
      produces:
      - application/json
      operationId: im_list
      description: Lists direct message channels for the calling user.
      externalDocs:
        url: https://api.slack.com/methods/im.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /conversations.replies:
    get:
      parameters:
      - name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results only
          when either timestamp is specified.
        in: query
      - name: ts
        type: number
        description: Unique identifier of a thread's parent message.
        in: query
      - name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:history`'
        in: query
      - name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        in: query
      - name: oldest
        type: number
        description: Start of time range of messages to include in results.
        in: query
      - name: channel
        type: string
        description: Conversation ID to fetch thread from.
        in: query
      - name: latest
        type: number
        description: End of time range of messages to include in results.
        in: query
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: thread_not_found
          schema:
            title: conversations.replies error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.replies method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - missing_scope
                - channel_not_found
                - thread_not_found
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              messages:
              - last_read: 1484678597.521003
                user: U061F7AUR
                reply_count: 3
                unread_count: 0
                thread_ts: 1482960137.003543
                subscribed: true
                type: message
                replies:
                - user: U061F7AUR
                  ts: 1483037603.017503
                - user: U061F7AUR
                  ts: 1483051909.018632
                - user: U061F7AUR
                  ts: 1483125339.020269
                ts: 1482960137.003543
                text: island
              - user: U061F7AUR
                parent_user_id: U061F7AUR
                thread_ts: 1482960137.003543
                type: message
                ts: 1483037603.017503
                text: one island
              - user: U061F7AUR
                parent_user_id: U061F7AUR
                thread_ts: 1482960137.003543
                type: message
                ts: 1483051909.018632
                text: two island
              - user: U061F7AUR
                parent_user_id: U061F7AUR
                thread_ts: 1482960137.003543
                type: message
                ts: 1483125339.020269
                text: three for the land
              ok: true
              response_metadata:
                next_cursor: bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx
              has_more: true
          schema:
            title: conversations.replies success schema
            type: object
            required:
            - ok
            - messages
            additionalProperties: true
            description: Schema for successful response from conversations.replies
              method
            properties:
              has_more:
                type: boolean
              ok:
                $ref: '#/definitions/defs_ok_true'
              messages:
                type: array
                items:
                  items:
                  - required:
                    - type
                    - user
                    - text
                    - thread_ts
                    - reply_count
                    - replies
                    - subscribed
                    - ts
                    additionalProperties: true
                    type: object
                    properties:
                      last_read:
                        $ref: '#/definitions/defs_ts'
                      user:
                        $ref: '#/definitions/defs_user_id'
                      reply_count:
                        type: integer
                      unread_count:
                        type: integer
                      type:
                        type: string
                      thread_ts:
                        $ref: '#/definitions/defs_ts'
                      subscribed:
                        type: boolean
                      replies:
                        type: array
                        items:
                          required:
                          - user
                          - ts
                          additionalProperties: true
                          type: object
                          properties:
                            user:
                              $ref: '#/definitions/defs_user_id'
                            ts:
                              $ref: '#/definitions/defs_ts'
                      ts:
                        $ref: '#/definitions/defs_ts'
                      text:
                        type: string
                      user_team:
                        $ref: '#/definitions/defs_team'
                      user_profile:
                        $ref: '#/definitions/objs_user_profile_short'
                      source_team:
                        $ref: '#/definitions/defs_team'
                      team:
                        $ref: '#/definitions/defs_team'
                  - required:
                    - type
                    - user
                    - text
                    - thread_ts
                    - parent_user_id
                    - ts
                    additionalProperties: true
                    type: object
                    properties:
                      parent_user_id:
                        $ref: '#/definitions/defs_user_id'
                      user:
                        $ref: '#/definitions/defs_user_id'
                      type:
                        type: string
                      thread_ts:
                        $ref: '#/definitions/defs_ts'
                      user_team:
                        $ref: '#/definitions/defs_team'
                      ts:
                        $ref: '#/definitions/defs_ts'
                      text:
                        type: string
                      is_starred:
                        type: boolean
                      user_profile:
                        $ref: '#/definitions/objs_user_profile_short'
                      source_team:
                        $ref: '#/definitions/defs_team'
                      team:
                        $ref: '#/definitions/defs_team'
          description: Typical success response
      security:
      - slackAuth:
        - channels:history
        - groups:history
        - im:history
        - mpim:history
      produces:
      - application/json
      operationId: conversations_replies
      description: Retrieve a thread of messages posted to a conversation
      externalDocs:
        url: https://api.slack.com/methods/conversations.replies
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /users.setPresence:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users:write`'
        in: header
      - name: presence
        type: string
        description: Either `auto` or `away`
        in: formData
      tags:
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - users:write
      produces:
      - application/json
      operationId: users_setPresence
      description: Manually sets user presence.
      externalDocs:
        url: https://api.slack.com/methods/users.setPresence
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /oauth.access:
    get:
      parameters:
      - name: client_secret
        type: string
        description: Issued when you created your application.
        in: query
      - name: code
        type: string
        description: The `code` param returned via the OAuth callback.
        in: query
      - name: single_channel
        type: boolean
        description: Request the user to add your app only to a single channel.
        in: query
      - name: client_id
        type: string
        description: Issued when you created your application.
        in: query
      - name: redirect_uri
        type: string
        description: This must match the originally submitted URI (if one was sent).
        in: query
      tags:
      - oauth
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_client_id
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              scope: groups:write
              access_token: xoxp-XXXXXXXX-XXXXXXXX-XXXXX
              team_id: TXXXXXXXXX
              team_name: Wyld Stallyns LLC
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Successful user token negotiation for a single scope
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: oauth_access
      description: Exchanges a temporary OAuth verifier code for an access token.
      externalDocs:
        url: https://api.slack.com/methods/oauth.access
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /conversations.rename:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: name
        type: string
        description: New name for conversation.
        in: formData
      - name: channel
        type: string
        description: ID of conversation to rename
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: not_in_channel
          schema:
            title: conversations.rename error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.rename method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - user_is_restricted
                - method_not_supported_for_channel_type
                - missing_scope
                - channel_not_found
                - not_in_channel
                - not_authorized
                - invalid_name
                - name_taken
                - invalid_name_required
                - invalid_name_punctuation
                - invalid_name_maxlength
                - invalid_name_specials
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response when the calling user is not a member
            of the conversation
        200:
          examples:
            application/json:
              channel:
                is_archived: false
                last_read: 1502126650.228446
                is_member: true
                name: general
                is_private: false
                is_pending_ext_shared: false
                is_org_shared: false
                is_group: false
                num_members: 23
                is_im: false
                is_shared: false
                previous_names:
                - specifics
                - abstractions
                - etc
                is_general: true
                is_ext_shared: false
                creator: W012A3BCD
                unlinked: 0
                topic:
                  creator: W012A3BCD
                  value: For public discussion of generalities
                  last_set: 1449709364
                is_read_only: false
                created: 1449252889
                id: C012AB3CD
                name_normalized: general
                is_channel: true
                purpose:
                  creator: W012A3BCD
                  value: This part of the workspace is for fun. Make fun here.
                  last_set: 1449709364
                is_mpim: false
                locale: en-US
                pending_shared: []
              ok: true
          schema:
            title: conversations.rename success schema
            type: object
            required:
            - ok
            - channel
            additionalProperties: true
            description: Schema for successful response from conversations.rename
              method
            properties:
              channel:
                $ref: '#/definitions/objs_conversation'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_rename
      description: Renames a conversation.
      externalDocs:
        url: https://api.slack.com/methods/conversations.rename
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.close:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: channel
        type: string
        description: Conversation to close.
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: conversations.close error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.close method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - method_not_supported_for_channel_type
                - channel_not_found
                - user_does_not_own_channel
                - missing_scope
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: conversations.close success schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response conversations.close method
            properties:
              no_op:
                type: boolean
              already_closed:
                type: boolean
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_close
      description: Closes a direct message or multi-person direct message.
      externalDocs:
        url: https://api.slack.com/methods/conversations.close
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /channels.archive:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: channel
        type: string
        description: Channel to archive
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: channels.archive error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response channels.archive method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - already_archived
                - cant_archive_general
                - restricted_action
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_restricted
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - team_added_to_org
                - missing_charset
                - superfluous_charset
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: channels.archive success schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from channels.archive method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_archive
      description: Archives a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.archive
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /team.profile.get:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users.profile:read`'
        in: query
      - name: visibility
        type: string
        description: Filter by visibility.
        in: query
      tags:
      - team.profile
      - team
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: team.profile.get error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from team.profile.get method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - user_is_bot
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_typ
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeou
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              profile:
                fields:
                - options: null
                  possible_values: null
                  is_hidden: 1
                  type: text
                  label: Phone extension
                  hint: Enter the extension to reach your desk
                  id: Xf06054AAA
                  ordering: 0
                - options: null
                  possible_values: null
                  type: date
                  label: Date of birth
                  hint: When you were born
                  id: Xf06054BBB
                  ordering: 1
                - options: null
                  possible_values: null
                  type: link
                  label: Facebook
                  hint: Enter a link to your Facebook profile
                  id: Xf06054CCC
                  ordering: 2
                - options: null
                  possible_values:
                  - Gryffindor
                  - Hufflepuff
                  - Ravenclaw
                  - Slytherin
                  type: options_list
                  label: House
                  hint: Hogwarts, obviously
                  id: Xf06054DDD
                  ordering: 3
                - options:
                    is_protected: 1
                  possible_values: null
                  type: text
                  label: Location
                  hint: Office location (LDAP)
                  id: Xf06054EEE
                  ordering: 4
                - options: null
                  possible_values: null
                  type: user
                  label: Manager
                  hint: The boss
                  id: Xf06054FFF
                  ordering: 5
              ok: true
          schema:
            title: team.profile.get success schema
            type: object
            required:
            - ok
            - profile
            additionalProperties: true
            description: Schema for successful response from team.profile.get method
            properties:
              profile:
                required:
                - fields
                additionalProperties: true
                type: object
                properties:
                  fields:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      $ref: '#/definitions/objs_team_profile_field'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - users.profile:read
      produces:
      - application/json
      operationId: team_profile_get
      description: Retrieve a team's profile.
      externalDocs:
        url: https://api.slack.com/methods/team.profile.get
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /reminders.delete:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `reminders:write`'
        in: header
      - name: reminder
        type: string
        description: The ID of the reminder
        in: formData
      tags:
      - reminders
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - reminders:write
      produces:
      - application/json
      operationId: reminders_delete
      description: Deletes a reminder.
      externalDocs:
        url: https://api.slack.com/methods/reminders.delete
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /files.comments.delete:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `files:write:user`'
        in: header
      - name: id
        type: string
        description: The comment to delete.
        in: formData
      - name: file
        type: string
        description: File to delete a comment from.
        in: formData
      tags:
      - files.comments
      - files
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: file_not_found
          schema:
            title: files.comments.delete error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response files.comments.delete method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - cant_delete
                - comment_not_found
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Standard failure response when used with an invalid token
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: files.comments.delete schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response files.comments.delete method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Standard success response is very simple
      security:
      - slackAuth:
        - files:write:user
      produces:
      - application/json
      operationId: files_comments_delete
      description: Deletes an existing comment on a file.
      externalDocs:
        url: https://api.slack.com/methods/files.comments.delete
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /files.upload:
    post:
      parameters:
      - name: channels
        type: string
        description: Comma-separated list of channel names or IDs where the file will
          be shared.
        in: formData
      - name: title
        type: string
        description: Title of file.
        in: formData
      - name: initial_comment
        type: string
        description: Initial comment to add to file.
        in: formData
      - name: filetype
        type: string
        description: A [file type](/types/file#file_types) identifier.
        in: formData
      - name: filename
        type: string
        description: Filename of file.
        in: formData
      - name: content
        type: string
        description: File contents via a POST variable. If omitting this parameter,
          you must provide a `file`.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `files:write:user`'
        in: formData
      - name: file
        type: string
        description: File contents via `multipart/form-data`. If omitting this parameter,
          you must submit `content`.
        in: formData
      tags:
      - files
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: files.upload error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response files.upload method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - posting_to_general_channel_denied
                - invalid_channel
                - file_uploads_disabled
                - file_uploads_except_images_disabled
                - storage_limit_reached
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: files.upload schema
            type: object
            required:
            - ok
            - file
            additionalProperties: true
            description: Schema for successful response files.upload method
            properties:
              file:
                $ref: '#/definitions/objs_file'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - files:write:user
      produces:
      - application/json
      operationId: files_upload
      description: Uploads or creates a file.
      externalDocs:
        url: https://api.slack.com/methods/files.upload
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /auth.revoke:
    get:
      parameters:
      - name: test
        type: boolean
        description: Setting this parameter to `1` triggers a _testing mode_ where
          the specified token will not actually be revoked.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `none`'
        in: query
      tags:
      - auth
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: auth.revoke error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from auth.revoke method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              revoked: true
              ok: true
          schema:
            title: auth.revoke schema
            type: object
            required:
            - ok
            - revoked
            additionalProperties: true
            description: Schema for successful response from auth.revoke method
            properties:
              revoked:
                type: boolean
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: auth_revoke
      description: Revokes a token.
      externalDocs:
        url: https://api.slack.com/methods/auth.revoke
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /channels.kick:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: user
        type: string
        description: User to remove from channel.
        in: formData
      - name: channel
        type: string
        description: Channel to remove user from.
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: not_in_channel
          schema:
            title: channels.kick error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from channels.kick method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - user_not_found
                - cant_kick_self
                - not_in_channel
                - cant_kick_from_general
                - restricted_action
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - user_is_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: channels.kick schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from channels.kick method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_kick
      description: Removes a user from a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.kick
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /channels.unarchive:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: channel
        type: string
        description: Channel to unarchive
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_unarchive
      description: Unarchives a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.unarchive
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /groups.kick:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: user
        type: string
        description: User to remove from private channel.
        in: formData
      - name: channel
        type: string
        description: Private channel to remove user from.
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: groups.kick error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from groups.kick method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - user_not_found
                - cant_kick_self
                - not_in_group
                - restricted_action
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - user_is_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: groups.kick schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from groups.kick method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_kick
      description: Removes a user from a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.kick
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /dnd.info:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `dnd:read`'
        in: query
      - name: user
        type: string
        description: User to fetch status for (defaults to current user)
        in: query
      tags:
      - dnd
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - dnd:read
      produces:
      - application/json
      operationId: dnd_info
      description: Retrieves a user's current Do Not Disturb status.
      externalDocs:
        url: https://api.slack.com/methods/dnd.info
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /usergroups.enable:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `usergroups:write`'
        in: header
      - name: include_count
        type: boolean
        description: Include the number of users in the User Group.
        in: formData
      - name: usergroup
        type: string
        description: The encoded ID of the User Group to enable.
        in: formData
      tags:
      - usergroups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - usergroups:write
      produces:
      - application/json
      operationId: usergroups_enable
      description: Enable a User Group
      externalDocs:
        url: https://api.slack.com/methods/usergroups.enable
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /groups.createChild:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: formData
      - name: channel
        type: string
        description: Private channel to clone and archive.
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_createChild
      description: Clones and archives a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.createChild
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /bots.info:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users:read`'
        in: query
      - name: bot
        type: string
        description: Bot user to get info on
        in: query
      tags:
      - bots
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: bot_not_found
          schema:
            title: bots.info error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from bots.info method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - bot_not_found
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: When no bot can be found, it returns an error.
        200:
          examples:
            application/json:
              ok: true
              bot:
                name: commandeer
                updated: 1449272004
                id: B061F7JQ1
                app_id: A061BLERW
                icons:
                  image_72: https://...
                  image_48: https://...
                  image_36: https://...
                deleted: false
          schema:
            title: bots.info schema
            type: object
            required:
            - ok
            - bot
            additionalProperties: true
            description: Schema for successful response from bots.info method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
              bot:
                required:
                - id
                - deleted
                - name
                - updated
                - app_id
                - icons
                additionalProperties: true
                type: object
                properties:
                  user_id:
                    $ref: '#/definitions/defs_user_id'
                  name:
                    type: string
                  updated:
                    type: integer
                  id:
                    $ref: '#/definitions/defs_bot_id'
                  app_id:
                    $ref: '#/definitions/defs_app_id'
                  icons:
                    required:
                    - image_36
                    - image_48
                    - image_72
                    additionalProperties: true
                    type: object
                    properties:
                      image_72:
                        type: string
                        format: uri
                      image_48:
                        type: string
                        format: uri
                      image_36:
                        type: string
                        format: uri
                  deleted:
                    type: boolean
          description: When successful, returns bot info by bot ID.
      security:
      - slackAuth:
        - users:read
      produces:
      - application/json
      operationId: bots_info
      description: Gets information about a bot user.
      externalDocs:
        url: https://api.slack.com/methods/bots.info
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /mpim.open:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `mpim:write`'
        in: header
      - name: users
        type: string
        description: Comma separated lists of users.  The ordering of the users is
          preserved whenever a MPIM group is returned.
        in: formData
      tags:
      - mpim
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: mpim.open error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from mpim.open method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - users_list_not_supplied
                - not_enough_users
                - too_many_users
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              channel:
                id: D024BFF1M
              ok: true
          schema:
            title: mpim.open success schema
            type: object
            required:
            - ok
            - group
            additionalProperties: true
            description: Schema for successful response from mpim.open method
            properties:
              group:
                $ref: '#/definitions/objs_group'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - mpim:write
      produces:
      - application/json
      operationId: mpim_open
      description: This method opens a multiparty direct message.
      externalDocs:
        url: https://api.slack.com/methods/mpim.open
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /files.info:
    get:
      parameters:
      - name: count
        type: string
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `files:read`'
        in: query
      - name: file
        type: string
        description: Specify a file by providing its ID.
        in: query
      - name: page
        type: string
        in: query
      tags:
      - files
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: files.info error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from files.info method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - file_not_found
                - file_deleted
                - timezone_count_failed
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: files.info schema
            type: object
            required:
            - ok
            - file
            - comments
            - paging
            additionalProperties: true
            description: Schema for successful response from files.info method
            properties:
              file:
                $ref: '#/definitions/objs_file'
              paging:
                $ref: '#/definitions/objs_paging'
              ok:
                $ref: '#/definitions/defs_ok_true'
              comments:
                $ref: '#/definitions/objs_comments'
          description: Typical success response
      security:
      - slackAuth:
        - files:read
      produces:
      - application/json
      operationId: files_info
      description: Gets information about a team file.
      externalDocs:
        url: https://api.slack.com/methods/files.info
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /dialog.open:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `none`'
        in: header
      - name: dialog
        type: string
        description: The dialog definition. This must be a JSON-encoded string.
        in: query
      - name: trigger_id
        type: string
        description: Exchange a trigger to post to the user.
        in: query
      tags:
      - dialog
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: missing_trigger
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response, before getting to any possible validation
            errors.
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response is quite minimal.
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: dialog_open
      description: Open a dialog with a user
      externalDocs:
        url: https://api.slack.com/methods/dialog.open
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /chat.meMessage:
    post:
      parameters:
      - name: text
        type: string
        description: Text of the message to send.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `chat:write:user`'
        in: header
      - name: channel
        type: string
        description: Channel to send message to. Can be a public channel, private
          group or IM channel. Can be an encoded ID, or a name.
        in: formData
      tags:
      - chat
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ts: 1417671948.000006
              channel: C024BE7LR
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - chat:write:user
      produces:
      - application/json
      operationId: chat_meMessage
      description: Share a me message into a channel.
      externalDocs:
        url: https://api.slack.com/methods/chat.meMessage
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /users.getPresence:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users:read`'
        in: query
      - name: user
        type: string
        description: User to get presence info on. Defaults to the authed user.
        in: query
      tags:
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: users.counts error schema
            type: object
            required:
            - ok
            - error
            additionalProperties:
              type: object
            description: Schema for error response users.getPresence method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
              presence: active
          schema:
            title: 'API method: users.getPresence'
            type: object
            required:
            - ok
            - presence
            additionalProperties: true
            description: Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65
            properties:
              last_activity:
                type: integer
              presence:
                type: string
              auto_away:
                type: boolean
              ok:
                $ref: '#/definitions/defs_ok_true'
              online:
                type: boolean
              manual_away:
                type: boolean
              connection_count:
                type: integer
          description: When requesting information for a different user, this method
            just returns the current presence (either `active` or `away`).
      security:
      - slackAuth:
        - users:read
      produces:
      - application/json
      operationId: users_getPresence
      description: Gets user presence information.
      externalDocs:
        url: https://api.slack.com/methods/users.getPresence
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /reactions.remove:
    post:
      parameters:
      - name: name
        type: string
        description: Reaction (emoji) name.
        in: formData
      - name: file_comment
        type: string
        description: File comment to remove reaction from.
        in: formData
      - name: timestamp
        type: number
        description: Timestamp of the message to remove reaction from.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `reactions:write`'
        in: header
      - name: file
        type: string
        description: File to remove reaction from.
        in: formData
      - name: channel
        type: string
        description: Channel where the message to remove reaction from was posted.
        in: formData
      tags:
      - reactions
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: no_reaction
          schema:
            title: reactions.remove error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from reactions.remove method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - bad_timestamp
                - file_not_found
                - file_comment_not_found
                - message_not_found
                - no_item_specified
                - invalid_name
                - no_reaction
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: reactions.remove schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response from reactions.remove method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - reactions:write
      produces:
      - application/json
      operationId: reactions_remove
      description: Removes a reaction from an item.
      externalDocs:
        url: https://api.slack.com/methods/reactions.remove
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /chat.postMessage:
    post:
      parameters:
      - name: username
        type: string
        description: Set your bot's user name. Must be used in conjunction with `as_user`
          set to false, otherwise ignored. See [authorship](#authorship) below.
        in: formData
      - name: thread_ts
        type: number
        description: Provide another message's `ts` value to make this message a reply.
          Avoid using a reply's `ts` value; use its parent instead.
        in: formData
      - name: attachments
        type: string
        description: A JSON-based array of structured attachments, presented as a
          URL-encoded string.
        in: formData
      - name: unfurl_links
        type: boolean
        description: Pass true to enable unfurling of primarily text-based content.
        in: formData
      - name: text
        type: string
        description: Text of the message to send. See below for an explanation of
          [formatting](#formatting). This field is usually required, unless you're
          providing only `attachments` instead. Provide no more than 40,000 characters
          or [risk truncation](/changelog/2018-04-truncating-really-long-messages).
        in: formData
      - name: unfurl_media
        type: boolean
        description: Pass false to disable unfurling of media content.
        in: formData
      - name: parse
        type: string
        description: Change how messages are treated. Defaults to `none`. See [below](#formatting).
        in: formData
      - name: as_user
        type: boolean
        description: Pass true to post the message as the authed user, instead of
          as a bot. Defaults to false. See [authorship](#authorship) below.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `chat:write`'
        in: header
      - name: mrkdwn
        type: boolean
        description: Disable Slack markup parsing by setting to `false`. Enabled by
          default.
        in: formData
      - name: icon_emoji
        type: string
        description: Emoji to use as the icon for this message. Overrides `icon_url`.
          Must be used in conjunction with `as_user` set to `false`, otherwise ignored.
          See [authorship](#authorship) below.
        in: formData
      - name: link_names
        type: boolean
        description: Find and link channel names and usernames.
        in: formData
      - name: icon_url
        type: string
        description: URL to an image to use as the icon for this message. Must be
          used in conjunction with `as_user` set to false, otherwise ignored. See
          [authorship](#authorship) below.
        in: formData
      - name: channel
        type: string
        description: Channel, private group, or IM channel to send message to. Can
          be an encoded ID, or a name. See [below](#channels) for more details.
        in: formData
      - name: reply_broadcast
        type: boolean
        description: Used in conjunction with `thread_ts` and indicates whether reply
          should be made visible to everyone in the channel or conversation. Defaults
          to `false`.
        in: formData
      tags:
      - chat
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: too_many_attachments
          schema:
            title: chat.postMessage error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response chat.postMessage method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - not_in_channel
                - is_archived
                - msg_too_long
                - no_text
                - too_many_attachments
                - rate_limited
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                type: string
          description: Typical error response if too many attachments are included
        200:
          examples:
            application/json:
              ts: 1503435956.000247
              channel: C1H9RESGL
              ok: true
              message:
                type: message
                ts: 1503435956.000247
                text: Here's a message for you
                subtype: bot_message
                attachments:
                - text: This is an attachment
                  fallback: This is an attachment's fallback
                  id: 1
                username: ecto1
                bot_id: B19LU7CSY
          schema:
            title: chat.postMessage success schema
            type: object
            required:
            - ok
            - channel
            - ts
            - message
            additionalProperties: true
            description: Schema for successful response of chat.postMessage method
            properties:
              ts:
                $ref: '#/definitions/defs_ts'
              channel:
                $ref: '#/definitions/defs_channel'
              ok:
                $ref: '#/definitions/defs_ok_true'
              message:
                $ref: '#/definitions/objs_message'
          description: Typical success response
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      produces:
      - application/json
      operationId: chat_postMessage
      description: Sends a message to a channel.
      externalDocs:
        url: https://api.slack.com/methods/chat.postMessage
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /dnd.endSnooze:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `dnd:write`'
        in: header
      tags:
      - dnd
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - dnd:write
      produces:
      - application/json
      operationId: dnd_endSnooze
      description: Ends the current user's snooze mode immediately.
      externalDocs:
        url: https://api.slack.com/methods/dnd.endSnooze
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /files.comments.edit:
    post:
      parameters:
      - name: comment
        type: string
        description: Text of the comment to edit.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `files:write:user`'
        in: header
      - name: id
        type: string
        description: The comment to edit.
        in: formData
      - name: file
        type: string
        description: File containing the comment to edit.
        in: formData
      tags:
      - files.comments
      - files
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: files.comments.edit error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response files.comments.edit method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - cant_edit
                - comment_not_found
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Standard failure response when used with an invalid token
        200:
          examples:
            application/json:
              user_id: W12345678
              user: grace
              url: https://subarachnoid.slack.com/
              team_id: T12345678
              ok: true
              team: Subarachnoid Workspace
          schema:
            title: files.comments.edit schema
            type: object
            required:
            - ok
            - comment
            additionalProperties: true
            description: Schema for successful response files.comments.edit method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
              comment:
                $ref: '#/definitions/objs_comment'
          description: Standard success response when used with a user token
      security:
      - slackAuth:
        - files:write:user
      produces:
      - application/json
      operationId: files_comments_edit
      description: Edit an existing file comment.
      externalDocs:
        url: https://api.slack.com/methods/files.comments.edit
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /users.profile.set:
    post:
      parameters:
      - name: profile
        type: string
        description: Collection of key:value pairs presented as a URL-encoded JSON
          hash.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users.profile:write`'
        in: header
      - name: user
        type: string
        description: ID of user to change. This argument may only be specified by
          team admins on paid teams.
        in: formData
      - name: value
        type: string
        description: Value to set a single key to. Usable only if `profile` is not
          passed.
        in: formData
      - name: name
        type: string
        description: Name of a single key to set. Usable only if `profile` is not
          passed.
        in: formData
      tags:
      - users.profile
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_profile
          schema:
            title: users.profile.set error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from users.profile.set method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - reserved_name
                - invalid_profile
                - profile_set_failed
                - not_admin
                - not_app_admin
                - cannot_update_admin_user
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              profile:
                status_emoji: ':books:'
                email: spengler@ghostbusters.example.com
                image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                display_name_normalized: spengler
                real_name_normalized: Egon Spengler
                display_name: spengler
                image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                status_text: Print is dead
                real_name: Egon Spengler
                avatar_hash: ge3b51ca72de
                image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                team: T012AB3C4
                image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
              ok: true
          schema:
            title: users.profile.set schema
            type: object
            required:
            - ok
            - username
            - profile
            additionalProperties: true
            description: Schema for successful response from users.profile.set method
            properties:
              profile:
                $ref: '#/definitions/objs_user_profile'
              ok:
                $ref: '#/definitions/defs_ok_true'
              username:
                type: string
          description: Typical success response
      security:
      - slackAuth:
        - users.profile:write
      produces:
      - application/json
      operationId: users_profile_set
      description: Set the profile information for a user.
      externalDocs:
        url: https://api.slack.com/methods/users.profile.set
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /groups.replies:
    get:
      parameters:
      - name: thread_ts
        type: number
        description: Unique identifier of a thread's parent message
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:history`'
        in: query
      - name: channel
        type: string
        description: Private channel to fetch thread from
        in: query
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              messages:
              - user: U2147483896
                type: message
                ts: 1358546515.000008
                text: Hello
              - user: U2147483896
                type: message
                ts: 1358546515.000007
                text: World
                is_starred: true
              - type: something_else
                ts: 1358546515.000007
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:history
      produces:
      - application/json
      operationId: groups_replies
      description: Retrieve a thread of messages posted to a private channel
      externalDocs:
        url: https://api.slack.com/methods/groups.replies
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /im.replies:
    get:
      parameters:
      - name: thread_ts
        type: number
        description: Unique identifier of a thread's parent message
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `im:history`'
        in: query
      - name: channel
        type: string
        description: Direct message channel to fetch thread from
        in: query
      tags:
      - im
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              messages:
              - user: U2147483896
                type: message
                ts: 1358546515.000008
                text: Hello
              - user: U2147483896
                type: message
                ts: 1358546515.000007
                text: World
                is_starred: true
              - type: something_else
                ts: 1358546515.000007
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - im:history
      produces:
      - application/json
      operationId: im_replies
      description: Retrieve a thread of messages posted to a direct message conversation
      externalDocs:
        url: https://api.slack.com/methods/im.replies
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /conversations.members:
    get:
      parameters:
      - name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:read`'
        in: query
      - name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        in: query
      - name: channel
        type: string
        description: ID of the conversation to retrieve members for
        in: query
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_cursor
          schema:
            title: conversations.members error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response conversations.members method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - invalid_limit
                - invalid_cursor
                - fetch_members_failed
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response when an invalid cursor is provided
        200:
          examples:
            application/json:
              members:
              - U023BECGF
              - U061F7AUR
              - W012A3CDE
              response_metadata:
                next_cursor: e3VzZXJfaWQ6IFcxMjM0NTY3fQ==
              ok: true
          schema:
            title: conversations.members success schema
            type: object
            required:
            - ok
            - members
            - response_metadata
            additionalProperties: true
            description: Schema for successful response conversations.members method
            properties:
              members:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/defs_user_id'
              response_metadata:
                required:
                - next_cursor
                additionalProperties: true
                type: object
                properties:
                  next_cursor:
                    type: string
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical paginated success response
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
      produces:
      - application/json
      operationId: conversations_members
      description: Retrieve members of a conversation.
      externalDocs:
        url: https://api.slack.com/methods/conversations.members
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /groups.history:
    get:
      parameters:
      - name: count
        type: integer
        description: Number of messages to return, between 1 and 1000.
        in: query
      - name: unreads
        type: boolean
        description: Include `unread_count_display` in the output?
        in: query
      - name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:history`'
        in: query
      - name: oldest
        type: number
        description: Start of time range of messages to include in results.
        in: query
      - name: channel
        type: string
        description: Private channel to fetch history for.
        in: query
      - name: latest
        type: number
        description: End of time range of messages to include in results.
        in: query
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: groups.history error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response groups.history method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - invalid_ts_latest
                - invalid_ts_oldest
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              messages:
              - user: U2147483896
                type: message
                ts: 1358546515.000008
                text: Hello
              - user: U2147483896
                type: message
                ts: 1358546515.000007
                text: World
                is_starred: true
              - type: something_else
                ts: 1358546515.000007
              latest: 1358547726.000003
              ok: true
              has_more: false
          schema:
            title: groups.history success schema
            type: object
            required:
            - ok
            - messages
            - has_more
            additionalProperties: true
            description: Schema for successful response groups.history method
            properties:
              has_more:
                type: boolean
              ok:
                $ref: '#/definitions/defs_ok_true'
              messages:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/objs_message'
          description: Typical success response
      security:
      - slackAuth:
        - groups:history
      produces:
      - application/json
      operationId: groups_history
      description: Fetches history of messages and events from a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.history
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /chat.postEphemeral:
    post:
      parameters:
      - name: attachments
        type: string
        description: A JSON-based array of structured attachments, presented as a
          URL-encoded string.
        in: formData
      - name: text
        type: string
        description: Text of the message to send. See below for an explanation of
          [formatting](#formatting). This field is usually required, unless you're
          providing only `attachments` instead.
        in: formData
      - name: link_names
        type: boolean
        description: Find and link channel names and usernames.
        in: formData
      - name: parse
        type: string
        description: Change how messages are treated. Defaults to `none`. See [below](#formatting).
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `chat:write`'
        in: header
      - name: user
        type: string
        description: '`id` of the user who will receive the ephemeral message. The
          user should be in the channel specified by the `channel` argument.'
        in: formData
      - name: as_user
        type: boolean
        description: Pass true to post the message as the authed bot. Defaults to
          false.
        in: formData
      - name: channel
        type: string
        description: Channel, private group, or IM channel to send message to. Can
          be an encoded ID, or a name.
        in: formData
      tags:
      - chat
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: user_not_in_channel
          schema:
            title: chat.postEphemeral error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from chat.postEphemeral method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - is_archived
                - msg_too_long
                - no_text
                - restricted_action
                - too_many_attachments
                - user_not_in_channel
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              message_ts: 1502210682.580145
              ok: true
          schema:
            title: chat.postEphemeral success schema
            type: object
            required:
            - ok
            - message_ts
            additionalProperties: true
            description: Schema for successful response from chat.postEphemeral method
            properties:
              message_ts:
                $ref: '#/definitions/defs_ts'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      produces:
      - application/json
      operationId: chat_postEphemeral
      description: Sends an ephemeral message to a user in a channel.
      externalDocs:
        url: https://api.slack.com/methods/chat.postEphemeral
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /users.info:
    get:
      parameters:
      - name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for this user. Defaults
          to `false`
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `users:read`'
        in: query
      - name: user
        type: string
        description: User to get info on
        in: query
      tags:
      - users
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: user_not_found
          schema:
            title: users.info error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from users.info method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - user_not_found
                - user_not_visible
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              user:
                is_primary_owner: false
                color: 9f69e7
                name: spengler
                is_restricted: false
                profile:
                  status_emoji: ':books:'
                  email: spengler@ghostbusters.example.com
                  image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  display_name_normalized: spengler
                  real_name_normalized: Egon Spengler
                  display_name: spengler
                  image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  status_text: Print is dead
                  real_name: Egon Spengler
                  avatar_hash: ge3b51ca72de
                  image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  team: T012AB3C4
                  image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                is_ultra_restricted: false
                tz_offset: -25200
                is_admin: true
                has_2fa: false
                updated: 1502138686
                team_id: T012AB3C4
                is_app_user: false
                id: W012A3CDE
                is_owner: false
                real_name: Egon Spengler
                tz_label: Pacific Daylight Time
                deleted: false
                tz: America/Los_Angeles
                is_bot: false
              ok: true
          schema:
            title: users.info success schema
            type: object
            required:
            - ok
            - user
            additionalProperties: true
            description: Schema for successful response from users.info method
            properties:
              user:
                $ref: '#/definitions/objs_user'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - users:read
      produces:
      - application/json
      operationId: users_info
      description: Gets information about a user.
      externalDocs:
        url: https://api.slack.com/methods/users.info
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /conversations.list:
    get:
      parameters:
      - name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:read`'
        in: query
      - name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached. Must be an integer no larger than 1000.
        in: query
      - name: exclude_archived
        type: boolean
        description: Set to `true` to exclude archived channels from the list
        in: query
      - name: types
        type: string
        description: Mix and match channel types by providing a comma-separated list
          of any combination of `public_channel`, `private_channel`, `mpim`, `im`
        in: query
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: conversations.list error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.list method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - missing_scope
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              response_metadata:
                next_cursor: dGVhbTpDMDYxRkE1UEI=
              ok: true
              channels:
              - is_archived: false
                name: general
                is_member: true
                is_private: false
                is_pending_ext_shared: false
                is_org_shared: false
                is_group: false
                num_members: 4
                is_im: false
                is_shared: false
                previous_names: []
                is_general: true
                is_ext_shared: false
                creator: U012A3CDE
                unlinked: 0
                topic:
                  creator: 
                  value: Company-wide announcements and work-based matters
                  last_set: 0
                created: 1449252889
                id: C012AB3CD
                name_normalized: general
                is_channel: true
                is_mpim: false
                purpose:
                  creator: 
                  value: This channel is for team-wide communication and announcements.
                    All team members are in this channel.
                  last_set: 0
                pending_shared: []
              - is_archived: false
                name: random
                is_member: true
                is_private: false
                is_pending_ext_shared: false
                is_org_shared: false
                is_group: false
                num_members: 4
                is_im: false
                is_shared: false
                previous_names: []
                is_general: false
                is_ext_shared: false
                creator: U061F7AUR
                unlinked: 0
                topic:
                  creator: 
                  value: Non-work banter and water cooler conversation
                  last_set: 0
                created: 1449252889
                id: C061EG9T2
                name_normalized: random
                is_channel: true
                is_mpim: false
                purpose:
                  creator: 
                  value: A place for non-work-related flimflam, faffing, hodge-podge
                    or jibber-jabber you'd prefer to keep out of more focused work-related
                    channels.
                  last_set: 0
                pending_shared: []
          schema:
            title: conversations.list success schema
            type: object
            required:
            - ok
            - channels
            additionalProperties: true
            description: Schema for successful response from conversations.list method
            properties:
              response_metadata:
                required:
                - next_cursor
                additionalProperties: true
                type: object
                properties:
                  next_cursor:
                    type: string
              ok:
                $ref: '#/definitions/defs_ok_true'
              channels:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/definitions/objs_conversation'
          description: Typical success response with only public channels
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
      produces:
      - application/json
      operationId: conversations_list
      description: Lists all channels in a Slack team.
      externalDocs:
        url: https://api.slack.com/methods/conversations.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /channels.mark:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `channels:write`'
        in: header
      - name: ts
        type: number
        description: Timestamp of the most recently seen message.
        in: formData
      - name: channel
        type: string
        description: Channel to set reading cursor in.
        in: formData
      tags:
      - channels
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: channels.mark error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response channels.mark method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - invalid_timestamp
                - not_in_channel
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: channels.mark success schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response channels.mark method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
      produces:
      - application/json
      operationId: channels_mark
      description: Sets the read cursor in a channel.
      externalDocs:
        url: https://api.slack.com/methods/channels.mark
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /apps.permissions.scopes.list:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `none`'
        in: query
      tags:
      - apps.permissions.scopes
      - apps
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: apps.permissions.scopes.list error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from apps.permissions.scopes.list
              method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - user_is_bot
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              scopes:
                user: []
                app_home:
                - chat:write
                - im:history
                - im:read
                group:
                - chat:write
                im:
                - chat:write
                mpim:
                - chat:write
                channel:
                - channels:history
                - chat:write
                team:
                - users:read
              ok: true
          schema:
            title: api.permissions.scopes.list success schema
            type: object
            required:
            - ok
            - scopes
            additionalProperties: true
            description: Schema for successful response api.permissions.scopes.list
              method
            properties:
              scopes:
                type: object
                additionalProperties: true
                properties:
                  user:
                    $ref: '#/definitions/objs_scopes'
                  app_home:
                    $ref: '#/definitions/objs_scopes'
                  group:
                    $ref: '#/definitions/objs_scopes'
                  im:
                    $ref: '#/definitions/objs_scopes'
                  mpim:
                    $ref: '#/definitions/objs_scopes'
                  channel:
                    $ref: '#/definitions/objs_scopes'
                  team:
                    $ref: '#/definitions/objs_scopes'
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical successful paginated response
      security:
      - slackAuth:
        - none
      produces:
      - application/json
      operationId: apps_permissions_scopes_list
      description: Returns list of scopes this app has on a team.
      externalDocs:
        url: https://api.slack.com/methods/apps.permissions.scopes.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /rtm.connect:
    get:
      parameters:
      - name: presence_sub
        type: boolean
        description: Only deliver presence events when requested by subscription.
          See [presence subscriptions](/docs/presence-and-status#subscriptions).
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `rtm:stream`'
        in: query
      - name: batch_presence_aware
        type: boolean
        description: Batch presence deliveries via subscription. Enabling changes
          the shape of `presence_change` events. See [batch presence](/docs/presence-and-status#batching).
        in: query
      tags:
      - rtm
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: rtm.connect error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from rtm.connect method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              self:
                name: robotoverlord
                id: U4X318ZMZ
              url: wss://...
              ok: true
              team:
                name: SlackDemo
                id: T2U81E2FP
                domain: slackdemo
          schema:
            title: rtm.connect schema
            type: object
            required:
            - ok
            - url
            - team
            - self
            additionalProperties: true
            description: Schema for successful response from rtm.connect method
            properties:
              self:
                required:
                - id
                - name
                additionalProperties: true
                type: object
                properties:
                  name:
                    type: string
                  id:
                    $ref: '#/definitions/defs_user_id'
              url:
                type: string
                format: uri
              ok:
                $ref: '#/definitions/defs_ok_true'
              team:
                required:
                - id
                - name
                - domain
                additionalProperties: true
                type: object
                properties:
                  name:
                    type: string
                  id:
                    $ref: '#/definitions/defs_team'
                  domain:
                    type: string
          description: Typical success response
      security:
      - slackAuth:
        - rtm:stream
      produces:
      - application/json
      operationId: rtm_connect
      description: Starts a Real Time Messaging session.
      externalDocs:
        url: https://api.slack.com/methods/rtm.connect
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /pins.list:
    get:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `pins:read`'
        in: query
      - name: channel
        type: string
        description: Channel to get pinned items for.
        in: query
      tags:
      - pins
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: pins.list error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from pins.list method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - not_authed
                - invalid_auth
                - account_inactive
                - no_permission
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
              items:
              - type: message
                channel: C2U86NC6H
                created_by: U2U85N1RZ
                created: 1508881078
                message:
                  permalink: https://hitchhikers.slack.com/archives/C2U86NC6H/p1508197641000151
                  user: U2U85N1RZ
                  type: message
                  ts: 1508197641.000151
                  text: What is the meaning of life?
                  pinned_to:
                  - C2U86NC6H
              - type: message
                channel: C2U86NC6H
                created_by: U2U85N1RZ
                created: 1508880991
                message:
                  permalink: https://hitchhikers.slack.com/archives/C2U86NC6H/p1508284197000015
                  user: U2U85N1RZ
                  type: message
                  ts: 1503289197.000015
                  text: The meaning of life, the universe, and everything is 42.
                  pinned_to:
                  - C2U86NC6H
          schema:
            title: pins.list success schema
            description: Schema for successful response from pins.list method
            items:
            - required:
              - ok
              - items
              additionalProperties: true
              type: object
              properties:
                ok:
                  $ref: '#/definitions/defs_ok_true'
                items:
                  type: array
                  uniqueItems: true
                  items:
                  - title: File Comment Pin
                    additionalProperties: true
                    type: object
                    properties:
                      file:
                        $ref: '#/definitions/objs_file'
                      type:
                        enum:
                        - file_comment
                        type: string
                      created_by:
                        $ref: '#/definitions/defs_user_id'
                      created:
                        type: integer
                      comment:
                        $ref: '#/definitions/objs_comment'
                  - title: File Pin
                    additionalProperties: true
                    type: object
                    properties:
                      file:
                        $ref: '#/definitions/objs_file'
                      type:
                        enum:
                        - file
                        type: string
                      created_by:
                        $ref: '#/definitions/defs_user_id'
                      created:
                        type: integer
                  - title: Message Pin
                    additionalProperties: true
                    type: object
                    properties:
                      type:
                        enum:
                        - message
                        type: string
                      channel:
                        $ref: '#/definitions/defs_channel'
                      created_by:
                        $ref: '#/definitions/defs_user_id'
                      created:
                        type: integer
                      message:
                        $ref: '#/definitions/objs_message'
            - required:
              - ok
              - count
              additionalProperties: true
              type: object
              properties:
                count:
                  type: integer
                ok:
                  $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - pins:read
      produces:
      - application/json
      operationId: pins_list
      description: Lists items pinned to a channel.
      externalDocs:
        url: https://api.slack.com/methods/pins.list
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /groups.open:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: channel
        type: string
        description: Private channel to open.
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_open
      description: Opens a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.open
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /conversations.archive:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
      - name: channel
        type: string
        description: ID of conversation to archive
        in: formData
      tags:
      - conversations
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: conversations.archive error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from conversations.archive method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - method_not_supported_for_channel_type
                - missing_scope
                - not_supported
                - channel_not_found
                - already_archived
                - cant_archive_general
                - restricted_action
                - not_authed
                - invalid_auth
                - account_inactive
                - user_is_bot
                - user_is_restricted
                - user_is_ultra_restricted
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - team_added_to_org
                - missing_charset
                - superfluous_charset
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: conversations.archive success schema
            type: object
            required:
            - ok
            additionalProperties: true
            description: Schema for successful response conversations.archive method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      produces:
      - application/json
      operationId: conversations_archive
      description: Archives a conversation.
      externalDocs:
        url: https://api.slack.com/methods/conversations.archive
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /stars.add:
    post:
      parameters:
      - name: file_comment
        type: string
        description: File comment to add star to.
        in: formData
      - name: timestamp
        type: number
        description: Timestamp of the message to add star to.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `stars:write`'
        in: header
      - name: channel
        type: string
        description: Channel to add star to, or channel where the message to add star
          to was posted (used with `timestamp`).
        in: formData
      - name: file
        type: string
        description: File to add star to.
        in: formData
      tags:
      - stars
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - stars:write
      produces:
      - application/json
      operationId: stars_add
      description: Adds a star to an item.
      externalDocs:
        url: https://api.slack.com/methods/stars.add
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /im.history:
    get:
      parameters:
      - name: count
        type: integer
        description: Number of messages to return, between 1 and 1000.
        in: query
      - name: unreads
        type: boolean
        description: Include `unread_count_display` in the output?
        in: query
      - name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results.
        in: query
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `im:history`'
        in: query
      - name: oldest
        type: number
        description: Start of time range of messages to include in results.
        in: query
      - name: channel
        type: string
        description: Direct message channel to fetch history for.
        in: query
      - name: latest
        type: number
        description: End of time range of messages to include in results.
        in: query
      tags:
      - im
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: channel_not_found
          schema:
            title: im.history error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from im.history method
            properties:
              provided:
                type: string
              ok:
                $ref: '#/definitions/defs_ok_false'
              needed:
                type: string
              error:
                enum:
                - channel_not_found
                - invalid_ts_latest
                - invalid_ts_oldest
                - not_authed
                - invalid_auth
                - account_inactive
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              messages:
              - user: U2147483896
                type: message
                ts: 1358546515.000008
                text: Hello
              - user: U2147483896
                type: message
                ts: 1358546515.000007
                text: World
                is_starred: true
              - type: something_else
                ts: 1358546515.000007
              latest: 1358547726.000003
              ok: true
              has_more: false
          schema:
            title: im.history success schema
            type: object
            required:
            - ok
            - messages
            - has_more
            additionalProperties: true
            description: Schema for successful response from im.history method
            properties:
              has_more:
                type: boolean
              ok:
                $ref: '#/definitions/defs_ok_true'
              messages:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  $ref: '#/definitions/objs_message'
          description: Typical success response
      security:
      - slackAuth:
        - im:history
      produces:
      - application/json
      operationId: im_history
      description: Fetches history of messages and events from direct message channel.
      externalDocs:
        url: https://api.slack.com/methods/im.history
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
  /groups.setPurpose:
    post:
      parameters:
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `groups:write`'
        in: header
      - name: purpose
        type: string
        description: The new purpose
        in: formData
      - name: channel
        type: string
        description: Private channel to set the purpose of
        in: formData
      tags:
      - groups
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: groups.setPurpose error schema
            type: object
            required:
            - ok
            - error
            additionalProperties: true
            description: Schema for error response from groups.setPurpose method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_false'
              error:
                enum:
                - channel_not_found
                - is_archived
                - too_long
                - user_is_restricted
                - not_authed
                - invalid_auth
                - account_inactive
                - token_revoked
                - no_permission
                - org_login_required
                - invalid_arg_name
                - invalid_array_arg
                - invalid_charset
                - invalid_form_data
                - invalid_post_type
                - missing_post_type
                - team_added_to_org
                - invalid_json
                - json_not_object
                - request_timeout
                - upgrade_required
                - fatal_error
                type: string
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: groups.setPurpose schema
            type: object
            required:
            - ok
            - purpose
            additionalProperties: true
            description: Schema for successful response from groups.setPurpose method
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
              purpose:
                type: string
          description: Typical success response
      security:
      - slackAuth:
        - groups:write
      produces:
      - application/json
      operationId: groups_setPurpose
      description: Sets the purpose for a private channel.
      externalDocs:
        url: https://api.slack.com/methods/groups.setPurpose
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
  /stars.remove:
    post:
      parameters:
      - name: file_comment
        type: string
        description: File comment to remove star from.
        in: formData
      - name: timestamp
        type: number
        description: Timestamp of the message to remove star from.
        in: formData
      - name: token
        type: string
        description: 'Authentication token. Requires scope: `stars:write`'
        in: header
      - name: channel
        type: string
        description: Channel to remove star from, or channel where the message to
          remove star from was posted (used with `timestamp`).
        in: formData
      - name: file
        type: string
        description: File to remove star from.
        in: formData
      tags:
      - stars
      responses:
        default:
          examples:
            application/json:
              ok: false
              error: invalid_auth
          schema:
            title: Default error template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical error response
        200:
          examples:
            application/json:
              ok: true
          schema:
            title: Default success template
            type: object
            required:
            - ok
            additionalProperties: true
            description: Verbose schema not yet ready for this method.
            properties:
              ok:
                $ref: '#/definitions/defs_ok_true'
          description: Typical success response
      security:
      - slackAuth:
        - stars:write
      produces:
      - application/json
      operationId: stars_remove
      description: Removes a star from an item.
      externalDocs:
        url: https://api.slack.com/methods/stars.remove
        description: API method documentation
      consumes:
      - application/x-www-form-urlencoded
      - application/json
info:
  title: Slack Web API
  version: 1.0.6
  description: One way to interact with the Slack platform is its HTTP RPC-based Web
    API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace
    tokens blessed with related OAuth scopes.
schemes:
- https
securityDefinitions:
  slackAuth:
    tokenUrl: https://slack.com/api/oauth.access
    flow: accessCode
    authorizationUrl: https://slack.com/oauth/authorize
    type: oauth2
    scopes:
      chat:write: chat:write
      dnd:read: dnd:read
      groups:write: groups:write
      search:read: search:read
      conversations:history: conversations:history
      im:write: im:write
      conversations:write: conversations:write
      mpim:history: mpim:history
      im:read: im:read
      admin: admin
      files:read: files:read
      stars:write: stars:write
      pins:read: pins:read
      rtm:stream: rtm:stream
      users:read: users:read
      usergroups:write: usergroups:write
      conversations:read: conversations:read
      reminders:read: reminders:read
      im:history: im:history
      channels:write: channels:write
      none: No scope required
      emoji:read: emoji:read
      users:write: users:write
      users:read.email: users:read.email
      users.profile:write: users.profile:write
      groups:read: groups:read
      users.profile:read: users.profile:read
      tokens.basic: tokens.basic
      reactions:read: reactions:read
      channels:history: channels:history
      files:write:user: files:write:user
      links:write: links:write
      stars:read: stars:read
      reminders:write: reminders:write
      bot: Bot user scope
      chat:write:bot: Author messages as a bot
      identity.basic: identity.basic
      mpim:write: mpim:write
      dnd:write: dnd:write
      usergroups:read: usergroups:read
      team:read: team:read
      chat:write:user: chat:write:user
      pins:write: pins:write
      mpim:read: mpim:read
      reactions:write: reactions:write
      groups:history: groups:history
      channels:read: channels:read
definitions:
  defs_ok_false:
    enum:
    - false
    type: boolean
    title: default failure response
  objs_message:
    title: Message object
    type: object
    required:
    - text
    - type
    - ts
    additionalProperties: true
    properties:
      last_read:
        $ref: '#/definitions/defs_ts'
      file:
        $ref: '#/definitions/objs_file'
      upload:
        type: boolean
      name:
        type: string
      permalink:
        type: string
        format: uri
      reply_count:
        type: integer
      unread_count:
        type: integer
      user:
        $ref: '#/definitions/defs_user_id'
      type:
        type: string
      thread_ts:
        $ref: '#/definitions/defs_ts'
      subscribed:
        type: boolean
      replies:
        type: array
        items:
          required:
          - user
          - ts
          additionalProperties: true
          type: object
          properties:
            user:
              $ref: '#/definitions/defs_user_id'
            ts:
              $ref: '#/definitions/defs_ts'
      user_team:
        $ref: '#/definitions/defs_team'
      ts:
        $ref: '#/definitions/defs_ts'
      text:
        type: string
      old_name:
        type: string
      reactions:
        type: array
        items:
          $ref: '#/definitions/objs_reaction'
      is_intro:
        type: boolean
      subtype:
        type: string
      topic:
        type: string
      comment:
        $ref: '#/definitions/objs_comment'
      attachments:
        type: array
        uniqueItems: true
        minItems: 1
        items:
          required:
          - id
          additionalProperties: true
          type: object
          properties:
            image_width:
              type: integer
            image_bytes:
              type: integer
            image_url:
              type: string
            image_height:
              type: integer
            fallback:
              type: string
            id:
              type: integer
      inviter:
        $ref: '#/definitions/defs_user_id'
      username:
        type: string
      pinned_to:
        type: array
        items:
          $ref: '#/definitions/defs_channel'
      user_profile:
        $ref: '#/definitions/objs_user_profile_short'
      source_team:
        $ref: '#/definitions/defs_team'
      display_as_bot:
        type: boolean
      icons:
        type: object
        additionalProperties: true
        properties:
          emoji:
            type: string
      bot_id:
        items:
        - $ref: '#/definitions/defs_bot_id'
        - title: Nil bot_id set when display_as_bot is false
          type: null
      team:
        $ref: '#/definitions/defs_team'
      purpose:
        type: string
  defs_dm_id:
    title: Direct Message Channel ID
    pattern: ^[D][A-Z0-9]{8}$
    type: string
  objs_group:
    title: Group object
    type: object
    required:
    - id
    - name
    - is_group
    - created
    - creator
    - name_normalized
    - members
    - topic
    - purpose
    additionalProperties: true
    properties:
      latest:
        items:
        - $ref: '#/definitions/objs_message'
        - type: null
      is_archived:
        type: boolean
      is_moved:
        type: integer
      name:
        type: string
      priority:
        type: integer
      members:
        type: array
        uniqueItems: true
        minItems: 1
        items:
          $ref: '#/definitions/defs_user_id'
      unread_count:
        type: integer
      is_group:
        type: boolean
      is_pending_ext_shared:
        type: boolean
      unread_count_display:
        type: integer
      creator:
        $ref: '#/definitions/defs_user_id'
      topic:
        required:
        - value
        - creator
        - last_set
        additionalProperties: true
        type: object
        properties:
          creator:
            $ref: '#/definitions/defs_topic_purpose_creator'
          value:
            type: string
          last_set:
            type: integer
      created:
        type: integer
      id:
        $ref: '#/definitions/defs_group_id'
      name_normalized:
        type: string
      is_mpim:
        type: boolean
      purpose:
        required:
        - value
        - creator
        - last_set
        additionalProperties: true
        type: object
        properties:
          creator:
            $ref: '#/definitions/defs_topic_purpose_creator'
          value:
            type: string
          last_set:
            type: integer
      is_open:
        type: boolean
      last_read:
        $ref: '#/definitions/defs_ts'
  prefs_prefs:
    title: User Prefs object
    additionalProperties: true
    type: object
    properties:
      no_invites_widget_in_sidebar:
        type: boolean
      push_at_channel_suppressed_channels:
        type: string
      onboarding_cancelled:
        type: boolean
      mac_ssb_bullet:
        type: boolean
      seen_highlights_coachmark:
        type: boolean
      analytics_upsell_coachmark_seen:
        type: boolean
      seen_intl_channel_names_coachmark:
        type: boolean
      jumbomoji:
        type: boolean
      fuller_timestamps:
        type: boolean
      show_all_skin_tones:
        type: boolean
      hide_user_group_info_pane:
        type: boolean
      welcome_message_hidden:
        type: boolean
      time24:
        type: boolean
      threads_everything:
        type: boolean
      keyboard:
        type: null
      sidebar_theme:
        type: string
      seen_unread_view_coachmark:
        type: boolean
      seen_threads_notification_banner:
        type: boolean
      seen_japanese_locale_change_message:
        type: boolean
      seen_highlights_arrows_coachmark:
        type: boolean
      seen_custom_status_badge:
        type: boolean
      measure_css_usage:
        type: boolean
      all_unreads_sort_order:
        type: string
      at_channel_suppressed_channels:
        type: string
      f_key_search:
        type: boolean
      emoji_mode:
        type: string
      seen_channel_browser_admin_coachmark:
        type: boolean
      prompted_for_email_disabling:
        type: boolean
      posts_formatting_guide:
        type: boolean
      no_joined_overlays:
        type: boolean
      mentions_exclude_at_user_groups:
        type: boolean
      all_channels_loud:
        type: boolean
      newxp_seen_last_message:
        type: integer
      email_research:
        type: boolean
      dnd_enabled:
        type: boolean
      seen_locale_change_message:
        type: integer
      frecency_ent_jumper_backup:
        type: string
      k_key_omnibox_auto_hide_count:
        type: integer
      enhanced_debugging:
        type: boolean
      has_searched:
        type: boolean
      folders_enabled:
        type: boolean
      pagekeys_handled:
        type: boolean
      show_ent_onboarding:
        type: boolean
      push_show_preview:
        type: boolean
      msg_preview:
        type: boolean
      onboarding_slackbot_conversation_step:
        type: integer
      locales_enabled:
        type: object
        additionalProperties: true
        properties:
          de-DE:
            type: string
          es-ES:
            type: string
          en-US:
            type: string
          pseudo:
            type: string
          ja-JP:
            type: string
          fr-FR:
            type: string
      enterprise_excluded_app_teams:
        type: null
      has_invited:
        type: boolean
      ls_disabled:
        type: boolean
      email_alerts_sleep_until:
        type: integer
      email_misc:
        type: boolean
      separate_shared_channels:
        type: boolean
      growth_msg_limit_reached_cta_last_ts:
        type: integer
      graphic_emoticons:
        type: boolean
      flannel_server_pool:
        type: string
      no_macelectron_banner:
        type: boolean
      display_real_names_override:
        type: integer
      snippet_editor_wrap_long_lines:
        type: boolean
      two_factor_type:
        type: null
      no_created_overlays:
        type: boolean
      webapp_spellcheck:
        type: boolean
      new_msg_snd:
        type: string
      confirm_user_marked_away:
        type: boolean
      show_typing:
        type: boolean
      preferred_skin_tone:
        type: string
      loud_channels:
        type: string
      show_memory_instrument:
        type: boolean
      dnd_start_hour:
        type: string
      email_developer:
        type: boolean
      frecency_ent_jumper:
        type: string
      msg_preview_persistent:
        type: boolean
      channel_sort:
        type: string
      lessons_enabled:
        type: boolean
      separate_private_channels:
        type: boolean
      expand_non_media_attachments:
        type: boolean
      seen_onboarding_private_groups:
        type: boolean
      search_only_my_channels:
        type: boolean
      email_alerts:
        type: string
      hide_hex_swatch:
        type: boolean
      muted_channels:
        type: string
      no_macssb1_banner:
        type: boolean
      seen_welcome_2:
        type: boolean
      intro_to_apps_message_seen:
        type: boolean
      winssb_window_flash_behavior:
        type: string
      seen_single_emoji_msg:
        type: boolean
      seen_shdep_slackbot_message:
        type: boolean
      arrow_history:
        type: boolean
      growth_msg_limit_sixty_day_banner_cta_last_ts:
        type: integer
      confirm_sh_call_start:
        type: boolean
      confirm_clear_all_unreads:
        type: boolean
      show_jumper_scores:
        type: boolean
      frecency_jumper:
        type: string
      seen_keyboard_shortcuts_coachmark:
        type: boolean
      push_idle_wait:
        type: integer
      privacy_policy_seen:
        type: boolean
      allow_calls_to_set_current_status:
        type: boolean
      seen_onboarding_starred_items:
        type: boolean
      seen_onboarding_start:
        type: boolean
      highlight_words:
        type: string
      a11y_animations:
        type: boolean
      search_only_current_team:
        type: boolean
      require_at:
        type: boolean
      ss_emojis:
        type: boolean
      growth_all_banners_prefs:
        type: string
      push_dm_alert:
        type: boolean
      box_enabled:
        type: boolean
      msg_input_send_btn_auto_set:
        type: boolean
      display_display_names:
        type: boolean
      has_created_channel:
        type: boolean
      convert_emoticons:
        type: boolean
      sidebar_behavior:
        type: string
      push_loud_channels_set:
        type: string
      loud_channels_set:
        type: string
      last_seen_at_channel_warning:
        type: integer
      seen_onboarding_channels:
        type: boolean
      emoji_autocomplete_big:
        type: boolean
      gdrive_authed:
        type: boolean
      expand_snippets:
        type: boolean
      email_weekly:
        type: boolean
      show_sidebar_quickswitcher_button:
        type: boolean
      seen_name_tagging_coachmark:
        type: boolean
      seen_domain_invite_reminder:
        type: boolean
      search_exclude_channels:
        type: string
      expand_internal_inline_imgs:
        type: boolean
      enter_is_special_in_tbt:
        type: boolean
      search_exclude_bots:
        type: boolean
      ent_org_wide_channels_sidebar:
        type: boolean
      email_offers:
        type: boolean
      no_omnibox_in_channels:
        type: boolean
      never_channels:
        type: string
      enterprise_migration_seen:
        type: boolean
      has_recently_shared_a_channel:
        type: boolean
      no_macssb2_banner:
        type: boolean
      in_interactive_mas_migration_flow:
        type: boolean
      enable_react_emoji_picker:
        type: boolean
      growls_enabled:
        type: boolean
      seen_emoji_update_overlay_coachmark:
        type: boolean
      seen_onboarding_search:
        type: boolean
      seen_onboarding_recent_mentions:
        type: boolean
      growth_msg_limit_long_reached_cta_count:
        type: integer
      full_text_extracts:
        type: boolean
      whats_new_read:
        type: integer
      growth_msg_limit_approaching_cta_count:
        type: integer
      client_logs_pri:
        type: string
      allow_cmd_tab_iss:
        type: boolean
      push_loud_channels:
        type: string
      seen_app_space_tutorial:
        type: boolean
      k_key_omnibox:
        type: boolean
      seen_onboarding_banner:
        type: boolean
      growth_msg_limit_long_reached_cta_last_ts:
        type: integer
      seen_app_space_coachmark:
        type: boolean
      seen_highlights_warm_welcome:
        type: boolean
      no_text_in_notifications:
        type: boolean
      mac_ssb_bounce:
        type: string
      growth_msg_limit_approaching_cta_ts:
        type: integer
      sidebar_theme_custom_values:
        type: string
      seen_ssb_prompt:
        type: boolean
      growth_msg_limit_sixty_day_banner_cta_count:
        type: integer
      seen_onboarding_invites:
        type: boolean
      seen_gdrive_coachmark:
        type: boolean
      overloaded_message_enabled:
        type: boolean
      folder_data:
        type: string
      dnd_end_hour:
        type: string
      emoji_use:
        type: string
      push_everything:
        type: boolean
      push_mention_channels:
        type: string
      enterprise_mdm_custom_msg:
        type: string
      push_mention_alert:
        type: boolean
      load_lato_2:
        type: boolean
      last_tos_acknowledged:
        type: string
      winssb_run_from_tray:
        type: boolean
      color_names_in_list:
        type: boolean
      dropbox_enabled:
        type: boolean
      messages_theme:
        type: string
      seen_shared_channels_opt_in_change_message:
        type: boolean
      push_sound:
        type: string
      mute_sounds:
        type: boolean
      mentions_exclude_at_channels:
        type: boolean
      seen_onboarding_slackbot_conversation:
        type: boolean
      seen_administration_menu:
        type: boolean
      tab_ui_return_selects:
        type: boolean
      start_scroll_at_oldest:
        type: boolean
      seen_member_invite_reminder:
        type: boolean
      seen_custom_status_callout:
        type: boolean
      search_sort:
        type: string
      obey_inline_img_limit:
        type: boolean
      a11y_font_size:
        type: string
      expand_inline_imgs:
        type: boolean
      no_winssb1_banner:
        type: boolean
      ssb_space_window:
        type: string
      seen_onboarding_direct_messages:
        type: boolean
      seen_shared_channels_coachmark:
        type: boolean
      seen_calls_interactive_coachmark:
        type: boolean
      enable_unread_view:
        type: boolean
      tz:
        type: string
      user_colors:
        type: string
      locale:
        type: string
      growth_msg_limit_reached_cta_count:
        type: integer
      two_factor_auth_enabled:
        type: boolean
      last_snippet_type:
        type: string
      purchaser:
        type: boolean
      shdep_promo_code_submitted:
        type: boolean
      email_tips:
        type: boolean
      has_uploaded:
        type: boolean
      msg_input_send_btn:
        type: boolean
      spaces_new_xp_banner_dismissed:
        type: boolean
      seen_guest_admin_slackbot_announcement:
        type: boolean
      gdrive_enabled:
        type: boolean
      two_factor_backup_type:
        type: null
      all_notifications_prefs:
        type: string
      mark_msgs_read_immediately:
        type: boolean
  objs_conversation:
    items:
    - title: Conversation object
      type: object
      required:
      - id
      - name
      - created
      - creator
      - is_archived
      - is_channel
      - is_general
      - is_mpim
      - is_group
      - is_org_shared
      - is_im
      - is_shared
      - is_private
      - name_normalized
      - topic
      - purpose
      additionalProperties: true
      properties:
        is_moved:
          type: integer
        last_read:
          $ref: '#/definitions/defs_ts'
        is_archived:
          type: boolean
        shared_team_ids:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/definitions/defs_team'
        is_open:
          type: boolean
        latest:
          items:
          - $ref: '#/definitions/objs_message'
          - type: null
        shares:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            required:
            - team
            - user
            - accepted_user
            - is_active
            additionalProperties: true
            type: object
            properties:
              user:
                $ref: '#/definitions/defs_user_id'
              accepted_user:
                $ref: '#/definitions/defs_user_id'
              team:
                $ref: '#/definitions/objs_team'
              is_active:
                type: boolean
        is_member:
          type: boolean
        priority:
          type: integer
        name:
          type: string
        user:
          $ref: '#/definitions/defs_user_id'
        is_private:
          type: boolean
        members:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/definitions/defs_user_id'
        unread_count:
          type: integer
        is_pending_ext_shared:
          type: boolean
        is_group:
          type: boolean
        is_org_shared:
          type: boolean
        num_members:
          type: integer
        timezone_count:
          type: integer
        is_im:
          type: boolean
        unread_count_display:
          type: integer
        is_shared:
          type: boolean
        previous_names:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/definitions/defs_channel_name'
        is_ext_shared:
          type: boolean
        is_general:
          type: boolean
        creator:
          $ref: '#/definitions/defs_user_id'
        display_counts:
          required:
          - display_counts
          - guest_counts
          additionalProperties: true
          type: object
          properties:
            guest_counts:
              type: integer
            display_counts:
              type: integer
        topic:
          required:
          - value
          - creator
          - last_set
          additionalProperties: true
          type: object
          properties:
            creator:
              $ref: '#/definitions/defs_topic_purpose_creator'
            value:
              type: string
            last_set:
              type: integer
        pin_count:
          type: integer
        unlinked:
          title: Field to determine whether a channel has ever been shared/disconnected
            in the past
          type: integer
        created:
          type: integer
        id:
          $ref: '#/definitions/defs_channel'
        is_read_only:
          type: boolean
        name_normalized:
          type: string
        accepted_user:
          $ref: '#/definitions/defs_user_id'
        is_channel:
          type: boolean
        is_mpim:
          enum:
          - false
          type: boolean
        purpose:
          required:
          - value
          - creator
          - last_set
          additionalProperties: true
          type: object
          properties:
            creator:
              $ref: '#/definitions/defs_topic_purpose_creator'
            value:
              type: string
            last_set:
              type: integer
        pending_shared:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/definitions/defs_team'
        has_pins:
          type: boolean
    - title: Conversation MPIM Object
      type: object
      required:
      - id
      - name
      - created
      - creator
      - is_archived
      - is_channel
      - is_general
      - is_mpim
      - is_group
      - is_org_shared
      - is_im
      - is_shared
      - is_private
      - name_normalized
      - topic
      - purpose
      additionalProperties: true
      properties:
        last_read:
          $ref: '#/definitions/defs_ts'
        is_archived:
          type: boolean
        is_moved:
          type: integer
        shared_team_ids:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/definitions/defs_team'
        is_open:
          type: boolean
        latest:
          items:
          - $ref: '#/definitions/objs_message'
          - type: null
        shares:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            required:
            - team
            - user
            - accepted_user
            - is_active
            additionalProperties: true
            type: object
            properties:
              user:
                $ref: '#/definitions/defs_user_id'
              accepted_user:
                $ref: '#/definitions/defs_user_id'
              team:
                $ref: '#/definitions/objs_team'
              is_active:
                type: boolean
        is_member:
          type: boolean
        priority:
          type: integer
        name:
          type: string
        user:
          $ref: '#/definitions/defs_user_id'
        is_private:
          type: boolean
        members:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/definitions/defs_user_id'
        unread_count:
          type: integer
        is_pending_ext_shared:
          type: boolean
        is_group:
          type: boolean
        is_org_shared:
          type: boolean
        num_members:
          type: integer
        timezone_count:
          type: integer
        is_im:
          type: boolean
        unread_count_display:
          type: integer
        is_shared:
          type: boolean
        previous_names:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/definitions/defs_channel_name'
        is_ext_shared:
          type: boolean
        is_general:
          type: boolean
        creator:
          $ref: '#/definitions/defs_user_id'
        display_counts:
          required:
          - display_counts
          - guest_counts
          additionalProperties: true
          type: object
          properties:
            guest_counts:
              type: integer
            display_counts:
              type: integer
        topic:
          required:
          - value
          - creator
          - last_set
          additionalProperties: true
          type: object
          properties:
            creator:
              $ref: '#/definitions/defs_topic_purpose_creator'
            value:
              type: string
            last_set:
              type: integer
        pin_count:
          type: string
        unlinked:
          title: Field to determine whether a channel has ever been shared/disconnected
            in the past
          type: integer
        created:
          type: integer
        id:
          $ref: '#/definitions/defs_channel'
        is_read_only:
          type: boolean
        name_normalized:
          type: string
        accepted_user:
          $ref: '#/definitions/defs_user_id'
        is_channel:
          type: boolean
        is_mpim:
          enum:
          - true
          type: boolean
        purpose:
          required:
          - value
          - creator
          - last_set
          additionalProperties: true
          type: object
          properties:
            creator:
              $ref: '#/definitions/defs_topic_purpose_creator'
            value:
              type: string
            last_set:
              type: integer
        pending_shared:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/definitions/defs_team'
    - title: Conversation IM Channel Object from conversations.* methods
      type: object
      required:
      - id
      - created
      - is_im
      - is_org_shared
      - user
      - priority
      additionalProperties: true
      properties:
        has_pins:
          type: boolean
        is_open:
          type: boolean
        latest:
          items:
          - $ref: '#/definitions/objs_message'
          - type: null
        priority:
          type: integer
        unread_count:
          type: integer
        is_org_shared:
          type: boolean
        is_im:
          type: boolean
        unread_count_display:
          type: integer
        is_shared:
          type: boolean
        is_ext_shared:
          type: boolean
        id:
          $ref: '#/definitions/defs_dm_id'
        created:
          type: integer
        is_user_deleted:
          type: boolean
        user:
          $ref: '#/definitions/defs_user_id'
        last_read:
          $ref: '#/definitions/defs_ts'
  defs_channel_name:
    title: Name of a channel
    type: string
  defs_pinned_info:
    title: Info for a pinned item
    additionalProperties:
      required:
      - pinned_by
      - pinned_ts
      additionalProperties: true
      type: object
      properties:
        pinned_ts:
          type: integer
        pinned_by:
          $ref: '#/definitions/defs_user_id'
    type: object
  defs_ts:
    title: Timestamp in format 0123456789.012345
    pattern: ^\d{10}\.\d{6}$
    type: string
  defs_group_id:
    title: Private Channel ID
    pattern: ^[G][A-Z0-9]{8}$
    type: string
  objs_channel:
    title: Channel Object
    type: object
    required:
    - id
    - name
    - created
    - creator
    - is_channel
    - is_org_shared
    - is_private
    - is_mpim
    - is_shared
    - name_normalized
    - members
    - topic
    - purpose
    additionalProperties: true
    properties:
      last_read:
        $ref: '#/definitions/defs_ts'
      is_archived:
        type: boolean
      is_moved:
        type: integer
      is_member:
        type: boolean
      latest:
        items:
        - $ref: '#/definitions/objs_message'
        - type: null
      priority:
        type: integer
      name:
        type: string
      is_private:
        type: boolean
      members:
        type: array
        uniqueItems: true
        minItems: 0
        items:
          $ref: '#/definitions/defs_user_id'
      unread_count:
        type: integer
      is_pending_ext_shared:
        type: boolean
      is_org_shared:
        type: boolean
      num_members:
        type: integer
      unread_count_display:
        type: integer
      is_shared:
        type: boolean
      previous_names:
        type: array
        uniqueItems: true
        minItems: 0
        items:
          $ref: '#/definitions/defs_channel_name'
      is_general:
        type: boolean
      creator:
        $ref: '#/definitions/defs_user_id'
      unlinked:
        title: Field to determine whether a channel has ever been shared/disconnected
          in the past
        type: integer
      topic:
        required:
        - value
        - creator
        - last_set
        additionalProperties: true
        type: object
        properties:
          creator:
            $ref: '#/definitions/defs_topic_purpose_creator'
          value:
            type: string
          last_set:
            type: integer
      is_read_only:
        type: boolean
      created:
        type: integer
      id:
        $ref: '#/definitions/defs_channel_id'
      name_normalized:
        type: string
      accepted_user:
        $ref: '#/definitions/defs_user_id'
      is_channel:
        type: boolean
      is_mpim:
        type: boolean
      purpose:
        required:
        - value
        - creator
        - last_set
        additionalProperties: true
        type: object
        properties:
          creator:
            $ref: '#/definitions/defs_topic_purpose_creator'
          value:
            type: string
          last_set:
            type: integer
      pending_shared:
        type: array
        uniqueItems: true
        minItems: 0
        items:
          $ref: '#/definitions/defs_team'
  objs_file_object_with_id_only:
    title: file object with ID only
    additionalProperties: true
    type: string
    $ref: '#/definitions/defs_file_id'
  defs_topic_purpose_creator:
    title: User ID or empty string, used for topic and purpose creation
    pattern: ^[UW][A-Z0-9]{8}$|^$
    type: string
  defs_app_id:
    title: App ID
    pattern: ^A[A-Z0-9]{8}$
    type: string
  defs_comment_id:
    title: File Comment ID
    pattern: ^Fc[A-Z0-9]{8}$
    type: string
  objs_reaction:
    title: Reaction object
    type: object
    required:
    - name
    - users
    - count
    additionalProperties: true
    properties:
      name:
        type: string
      users:
        type: array
        items:
          $ref: '#/definitions/defs_user_id'
      count:
        type: integer
  objs_user_profile_shortest:
    required:
    - avatar_hash
    - image_72
    - first_name
    - real_name
    - display_name
    - team
    additionalProperties: true
    type: object
    properties:
      image_72:
        type: string
        format: uri
      display_name:
        type: string
      real_name:
        type: string
      avatar_hash:
        type: string
      team:
        $ref: '#/definitions/defs_team'
      first_name:
        type: string
  objs_team:
    title: Team Object
    type: object
    required:
    - id
    - name
    - domain
    - email_domain
    - icon
    additionalProperties: true
    properties:
      name:
        type: string
      icon:
        type: object
        properties:
          image_102:
            type: string
          image_44:
            type: string
          image_230:
            type: string
          image_34:
            type: string
          image_88:
            type: string
          image_68:
            type: string
          image_132:
            type: string
          image_default:
            type: boolean
      has_compliance_export:
        type: boolean
      enterprise_name:
        type: string
      email_domain:
        type: string
      messages_count:
        type: integer
      domain:
        type: string
      over_integrations_limit:
        type: boolean
      id:
        $ref: '#/definitions/defs_team'
      msg_edit_window_mins:
        type: integer
      enterprise_id:
        type: string
      avatar_base_url:
        type: string
        format: uri
      prefs:
        $ref: '#/definitions/team_prefs_prefs'
      plan:
        type: string
      over_storage_limit:
        type: boolean
  defs_channel:
    title: Channel-like conversation ID
    pattern: ^[CGD][A-Z0-9]{8}$
    type: string
  defs_team:
    title: Team ID
    pattern: ^[T][A-Z0-9]{8}$
    type: string
  objs_dnd:
    required:
    - dnd_enabled
    - next_dnd_end_ts
    - next_dnd_start_ts
    - snooze_enabled
    additionalProperties: true
    type: object
    properties:
      dnd_enabled:
        type: boolean
      snooze_enabled:
        type: boolean
      next_dnd_end_ts:
        type: integer
      next_dnd_start_ts:
        type: integer
  objs_user_profile:
    title: User profile object
    type: object
    required:
    - real_name
    - display_name
    - avatar_hash
    - real_name_normalized
    - display_name_normalized
    - image_24
    - image_32
    - image_48
    - image_72
    - image_192
    additionalProperties: true
    properties:
      status_expiration:
        type: integer
      status_emoji:
        type: string
      skype:
        type: string
      email:
        type: string
        format: email
      always_active:
        type: boolean
      phone:
        type: string
      image_72:
        type: string
        format: uri
      image_192:
        type: string
        format: uri
      last_name:
        type: string
      image_512:
        type: string
        format: uri
      display_name_normalized:
        type: string
      guest_channels:
        type: string
      fields:
        type: object
      display_name:
        type: string
      real_name_normalized:
        type: string
      image_48:
        type: string
        format: uri
      status_text_canonical:
        type: string
      real_name:
        type: string
      image_original:
        type: string
        format: uri
      status_text:
        type: string
      avatar_hash:
        type: string
      image_32:
        type: string
        format: uri
      team:
        $ref: '#/definitions/defs_team'
      image_24:
        type: string
        format: uri
      first_name:
        type: string
      title:
        type: string
  defs_file_id:
    title: File ID
    pattern: ^[F][A-Z0-9]{8}$
    type: string
  team_prefs_prefs:
    title: Team Prefs Object
    type: object
    required:
    - default_channels
    additionalProperties: true
    properties:
      enterprise_mandatory_channels:
        type: array
      warn_before_at_channel:
        type: string
      uses_customized_custom_status_presets:
        type: boolean
      group_retention_duration:
        type: integer
      file_retention_type:
        type: integer
      disable_file_editing:
        type: boolean
      default_rxns:
        type: array
        items:
          type: string
      file_limit_whitelisted:
        type: boolean
      show_join_leave:
        type: boolean
      who_can_create_groups:
        type: string
      who_can_change_team_profile:
        type: string
      who_can_create_delete_user_groups:
        type: string
      who_can_at_channel:
        type: string
      retention_duration:
        type: integer
      dnd_enabled:
        type: boolean
      group_retention_type:
        type: integer
      gdrive_enabled_team:
        type: boolean
      disable_file_uploads:
        type: string
      who_has_team_visibility:
        type: string
      who_can_manage_integrations:
        required:
        - type
        additionalProperties: true
        type: object
        properties:
          type:
            type: array
            items:
              type: string
      invites_limit:
        type: boolean
      auth_mode:
        type: string
      custom_status_default_emoji:
        type: string
      who_can_at_everyone:
        type: string
      enterprise_team_creation_request:
        required:
        - is_enabled
        additionalProperties: true
        type: object
        properties:
          is_enabled:
            type: boolean
      dnd_start_hour:
        type: string
      default_channels:
        type: array
        items:
          $ref: '#/definitions/defs_channel'
      display_email_addresses:
        type: boolean
      invites_only_admins:
        type: boolean
      custom_status_presets:
        type: array
        uniqueItems: true
        minItems: 1
        items:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: string
      allow_calls_interactive_screen_sharing:
        type: boolean
      who_can_post_in_shared_channels:
        required:
        - type
        additionalProperties: true
        type: object
        properties:
          type:
            type: array
            items:
              type: string
      who_can_kick_channels:
        type: string
      allow_calls:
        type: boolean
      who_can_edit_user_groups:
        type: string
      allow_retention_override:
        type: boolean
      calling_app_name:
        type: string
      allow_message_deletion:
        type: boolean
      enterprise_default_channels:
        type: array
      compliance_export_start:
        type: integer
      dm_retention_duration:
        type: integer
      discoverable:
        type: string
      app_whitelist_enabled:
        type: boolean
      allow_shared_channel_perms_override:
        type: boolean
      who_can_manage_guests:
        required:
        - type
        additionalProperties: true
        type: object
        properties:
          type:
            type: array
            items:
              type: string
      who_can_kick_groups:
        type: string
      who_can_create_shared_channels:
        type: string
      retention_type:
        type: integer
      display_real_names:
        type: boolean
      hide_referers:
        type: boolean
      require_at_for_mention:
        type: boolean
      msg_edit_window_mins:
        type: integer
      loud_channel_mentions_limit:
        type: integer
      dnd_end_hour:
        type: string
      disallow_public_file_urls:
        type: boolean
      disable_file_deleting:
        type: boolean
      all_users_can_purchase:
        type: boolean
      can_receive_shared_channels_invites:
        type: boolean
      enterprise_mdm_date_enabled:
        type: integer
      who_can_manage_shared_channels:
        required:
        - type
        additionalProperties: true
        type: object
        properties:
          type:
            type: array
            items:
              type: string
      who_can_archive_channels:
        type: string
      locale:
        type: string
      enable_shared_channels:
        type: integer
      custom_tos:
        type: boolean
      dm_retention_type:
        type: integer
      disable_email_ingestion:
        type: boolean
      file_retention_duration:
        type: integer
      who_can_create_channels:
        type: string
      enterprise_mdm_level:
        type: integer
      who_can_post_general:
        type: string
  defs_invite_id:
    title: Invite ID for an external shared channel
    type: integer
  defs_room_id:
    title: Room ID for a slack call
    pattern: ^[R][A-Z0-9]{8}$
    type: string
  objs_user_profile_short:
    required:
    - avatar_hash
    - image_72
    - first_name
    - real_name
    - display_name
    - team
    - name
    - is_restricted
    - is_ultra_restricted
    additionalProperties: true
    type: object
    properties:
      name:
        type: string
      is_restricted:
        type: boolean
      image_72:
        type: string
        format: uri
      is_ultra_restricted:
        type: boolean
      display_name:
        type: string
      real_name:
        type: string
      avatar_hash:
        type: string
      team:
        $ref: '#/definitions/defs_team'
      first_name:
        type: string
  objs_team_profile_field:
    required:
    - id
    - ordering
    - label
    - hint
    - type
    - options
    additionalProperties: true
    type: object
    properties:
      options:
        type: array
        items:
          type: string
      type:
        enum:
        - text
        - date
        - link
        - mailto
        - options_list
        - user
        type: string
      possible_values:
        type: array
        items:
          type: string
      is_hidden:
        type: boolean
      field_name:
        type: string
      hint:
        type: string
      label:
        type: string
      id:
        type: string
        pattern: ^X[a-zA-Z0-9]{9}$
      ordering:
        type: number
  objs_comments:
    title: file comments object
    type: array
    items: {}
  defs_user_id:
    title: User ID
    pattern: ^[UW][A-Z0-9]{8}$
    type: string
  defs_ok_true:
    enum:
    - true
    type: boolean
    title: default success response
  defs_channel_id:
    title: Channel ID
    pattern: ^[C][A-Z0-9]{8}$
    type: string
  objs_comment:
    title: File Comment Object
    additionalProperties: true
    type: object
    properties:
      pinned_info:
        $ref: '#/definitions/defs_pinned_info'
      user:
        type: string
      timestamp:
        type: integer
      reactions:
        type: array
        items:
          $ref: '#/definitions/objs_reaction'
      is_intro:
        type: boolean
      id:
        $ref: '#/definitions/defs_comment_id'
      comment:
        type: string
      created:
        type: integer
      pinned_to:
        type: array
        items:
          $ref: '#/definitions/defs_channel'
  objs_user:
    required:
    - id
    - team_id
    - name
    - deleted
    - color
    - real_name
    - tz
    - tz_label
    - tz_offset
    - profile
    - is_admin
    - is_owner
    - is_primary_owner
    - is_restricted
    - is_ultra_restricted
    - is_bot
    - updated
    - is_app_user
    additionalProperties: true
    type: object
    properties:
      is_primary_owner:
        type: boolean
      color:
        type: string
        pattern: ^[a-fA-F0-9]{6}$
      name:
        type: string
      is_restricted:
        type: boolean
      profile:
        $ref: '#/definitions/objs_user_profile'
      is_ultra_restricted:
        type: boolean
      tz_offset:
        type: number
      is_admin:
        type: boolean
      has_2fa:
        type: boolean
      updated:
        type: number
      team_id:
        $ref: '#/definitions/defs_team'
      is_app_user:
        type: boolean
      real_name:
        type: string
      id:
        $ref: '#/definitions/defs_user_id'
      is_owner:
        type: boolean
      tz_label:
        type: string
      presence:
        type: string
      deleted:
        type: boolean
      tz:
        type: string
      locale:
        type: string
      is_bot:
        type: boolean
  objs_inviting_user:
    required:
    - id
    - team_id
    - name
    - profile
    - is_restricted
    - is_ultra_restricted
    - updated
    - is_app_user
    additionalProperties: true
    type: object
    properties:
      name:
        type: string
      is_restricted:
        type: boolean
      profile:
        $ref: '#/definitions/objs_user_profile_shortest'
      is_ultra_restricted:
        type: boolean
      updated:
        type: number
      team_id:
        $ref: '#/definitions/defs_team'
      is_app_user:
        type: boolean
      id:
        $ref: '#/definitions/defs_user_id'
      real_name:
        type: string
  objs_scopes:
    type: array
    items:
      title: Named OAuth scopes
      type: string
      x-examples:
      - chat:write
      - im:history
      - im:read
  defs_bot_id:
    title: Bot User ID
    pattern: ^B[A-Z0-9]{8}$
    type: string
  objs_paging:
    title: paging object for files
    type: object
    required:
    - count
    - page
    - total
    additionalProperties: true
    properties:
      total:
        type: integer
      page:
        type: integer
      count:
        type: integer
      pages:
        type: integer
  objs_im:
    title: IM Object
    type: object
    required:
    - id
    - is_im
    - is_org_shared
    - user
    - created
    - is_user_deleted
    additionalProperties: true
    properties:
      user:
        $ref: '#/definitions/defs_user_id'
      priority:
        type: integer
      is_org_shared:
        type: boolean
      is_im:
        type: boolean
      id:
        $ref: '#/definitions/defs_dm_id'
      created:
        type: integer
      is_user_deleted:
        type: boolean
  objs_file:
    title: file object
    additionalProperties: true
    type: object
    properties:
      size:
        type: integer
      external_type:
        type: string
      thumb_720_h:
        type: integer
      thumb_960:
        type: string
        format: uri
      thumb_800:
        type: string
        format: uri
      ims:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_dm_id'
      thumb_360_w:
        type: integer
      thumb_160:
        type: string
        format: uri
      pinned_info:
        $ref: '#/definitions/defs_pinned_info'
      thumb_1024:
        type: string
        format: uri
      name:
        type: string
      permalink:
        type: string
        format: uri
      title:
        type: string
      thumb_480_h:
        type: integer
      mimetype:
        type: string
      thumb_800_w:
        type: integer
      is_public:
        type: boolean
      user:
        type: string
      comments_count:
        type: integer
      pretty_type:
        type: string
      timestamp:
        type: integer
      thumb_960_w:
        type: integer
      thumb_80:
        type: string
        format: uri
      thumb_720:
        type: string
        format: uri
      thumb_360_h:
        type: integer
      thumb_1024_w:
        type: integer
      public_url_shared:
        type: boolean
      original_w:
        type: integer
      editable:
        type: boolean
      permalink_public:
        type: string
        format: uri
      reactions:
        type: array
        items:
          $ref: '#/definitions/objs_reaction'
      thumb_480:
        type: string
        format: uri
      url_private:
        type: string
        format: uri
      thumb_1024_h:
        type: integer
      thumb_960_h:
        type: integer
      mode:
        type: string
      created:
        type: integer
      id:
        $ref: '#/definitions/defs_file_id'
      thumb_720_w:
        type: integer
      is_external:
        type: boolean
      thumb_64:
        type: string
        format: uri
      groups:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_group_id'
      thumb_360:
        type: string
        format: uri
      channels:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_channel_id'
      pinned_to:
        type: array
        items:
          $ref: '#/definitions/defs_channel'
      username:
        type: string
      display_as_bot:
        type: boolean
      thumb_800_h:
        type: integer
      url_private_download:
        type: string
        format: uri
      image_exif_rotation:
        type: integer
      thumb_480_w:
        type: integer
      filetype:
        type: string
      original_h:
        type: integer
swagger: 2.0
